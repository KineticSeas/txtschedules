import { Component, Input, Output, EventEmitter } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { MatFormFieldModule } from '@angular/material/form-field';
import { MatInputModule } from '@angular/material/input';
import { MatOptionModule } from '@angular/material/core';
import { MatSelectModule } from '@angular/material/select';
import { MatRadioModule } from '@angular/material/radio';
import * as i0 from "@angular/core";
import * as i1 from "../data.service";
import * as i2 from "@angular/common";
import * as i3 from "@angular/forms";
import * as i4 from "@angular/material/radio";
export class SqlRadioGroupComponent {
    constructor(_dataService) {
        this._dataService = _dataService;
        this.value = '';
        this.fieldData = '';
        this.appearance = 'outline';
        this.inline = 'N';
        this.native = 'Y';
        this.sql = '';
        this.handler = '';
        this.col = '';
        this.class = '';
        this.style = '';
        this.id = '';
        this.id2 = '';
        this.id3 = '';
        this.hint = '';
        this.icon = '';
        this.label = 'Label not set';
        this.placeholder = '';
        this.bs_row = 'Y';
        this.bs_col = 'col-12';
        this.top_label = 'N';
        this.counter = 0;
        this.change = new EventEmitter();
        this.parameters = { page: '', id: '', id2: '', id3: '' };
        this.myObs = this._dataService.dataSubject.subscribe(d => {
            this.data = d;
            this.fieldData = this.data;
            this.value = this.fieldData[this.col];
            this.counter++;
        });
    }
    ngAfterViewInit() {
        this.parameters.id = this.id;
        this.parameters.id2 = this.id2;
        this.parameters.id3 = this.id3;
        this.myDataObs = this._dataService.getSelect(this.sql, this.parameters).subscribe((data) => {
            this.selectData = data;
        });
    }
    ngOnInit() {
        if (this.bs_col == 'Y') {
            this.row_value = 'row';
        }
        else {
            this.row_value = 'none';
        }
        if (this.bs_col != '') {
            this.col_value = this.bs_col;
        }
        else {
            this.col_value = 'none';
        }
    }
    handleChange() {
        this.fieldData['submit'] = 'N';
        this.fieldData[this.col] = this.value;
        this._dataService.pushNotification(this.fieldData);
    }
    ngOnDestroy() {
        this.myObs.unsubscribe();
        this.myDataObs.unsubscribe();
    }
}
SqlRadioGroupComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.3", ngImport: i0, type: SqlRadioGroupComponent, deps: [{ token: i1.SQLDataService }], target: i0.ɵɵFactoryTarget.Component });
SqlRadioGroupComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.3", type: SqlRadioGroupComponent, isStandalone: true, selector: "sql-radio-group", inputs: { appearance: "appearance", inline: "inline", native: "native", sql: "sql", handler: "handler", col: "col", data: "data", class: "class", style: "style", id: "id", id2: "id2", id3: "id3", hint: "hint", icon: "icon", label: "label", placeholder: "placeholder", bs_row: "bs_row", bs_col: "bs_col", top_label: "top_label" }, outputs: { change: "change" }, ngImport: i0, template: "<ng-container *ngIf=\"inline=='N'\">\n  <label id=\"example-radio-group-label\">{{ label }}</label>\n  <mat-radio-group\n    aria-labelledby=\"example-radio-group-label\"\n    class=\"example-radio-group\"\n    [style]=\"style\"\n    [(ngModel)]=\"value\"\n    (ngModelChange)=\"handleChange()\">\n    <mat-radio-button class=\"example-radio-button\" *ngFor=\"let m of selectData\" [value]=\"m.id\">\n      {{ m.option }}\n    </mat-radio-button>\n  </mat-radio-group>\n</ng-container>\n<ng-container *ngIf=\"inline=='Y'\">\n  <label id=\"example-radio-group-label\">{{ label }}</label>\n  <mat-radio-group\n    aria-labelledby=\"example-radio-group-label\"\n    [class]=\"class\"\n    [style]=\"style\"\n    [(ngModel)]=\"value\"\n    (ngModelChange)=\"handleChange()\">\n    <mat-radio-button class=\"example-radio-button\" *ngFor=\"let m of selectData\" [value]=\"m.id\">\n      {{ m.option }}\n    </mat-radio-button>\n  </mat-radio-group>\n</ng-container>", styles: [".example-radio-group{display:flex;flex-direction:column;margin:15px 0;align-items:flex-start}.example-radio-button{margin:5px}\n"], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "ngmodule", type: FormsModule }, { kind: "directive", type: i3.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i3.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "ngmodule", type: MatFormFieldModule }, { kind: "ngmodule", type: MatInputModule }, { kind: "ngmodule", type: MatOptionModule }, { kind: "ngmodule", type: MatSelectModule }, { kind: "ngmodule", type: MatRadioModule }, { kind: "directive", type: i4.MatRadioGroup, selector: "mat-radio-group", exportAs: ["matRadioGroup"] }, { kind: "component", type: i4.MatRadioButton, selector: "mat-radio-button", inputs: ["disableRipple", "tabIndex"], exportAs: ["matRadioButton"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.3", ngImport: i0, type: SqlRadioGroupComponent, decorators: [{
            type: Component,
            args: [{ selector: 'sql-radio-group', standalone: true, imports: [CommonModule, FormsModule, MatFormFieldModule,
                        MatInputModule, MatOptionModule, MatSelectModule, MatRadioModule], template: "<ng-container *ngIf=\"inline=='N'\">\n  <label id=\"example-radio-group-label\">{{ label }}</label>\n  <mat-radio-group\n    aria-labelledby=\"example-radio-group-label\"\n    class=\"example-radio-group\"\n    [style]=\"style\"\n    [(ngModel)]=\"value\"\n    (ngModelChange)=\"handleChange()\">\n    <mat-radio-button class=\"example-radio-button\" *ngFor=\"let m of selectData\" [value]=\"m.id\">\n      {{ m.option }}\n    </mat-radio-button>\n  </mat-radio-group>\n</ng-container>\n<ng-container *ngIf=\"inline=='Y'\">\n  <label id=\"example-radio-group-label\">{{ label }}</label>\n  <mat-radio-group\n    aria-labelledby=\"example-radio-group-label\"\n    [class]=\"class\"\n    [style]=\"style\"\n    [(ngModel)]=\"value\"\n    (ngModelChange)=\"handleChange()\">\n    <mat-radio-button class=\"example-radio-button\" *ngFor=\"let m of selectData\" [value]=\"m.id\">\n      {{ m.option }}\n    </mat-radio-button>\n  </mat-radio-group>\n</ng-container>", styles: [".example-radio-group{display:flex;flex-direction:column;margin:15px 0;align-items:flex-start}.example-radio-button{margin:5px}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.SQLDataService }]; }, propDecorators: { appearance: [{
                type: Input
            }], inline: [{
                type: Input
            }], native: [{
                type: Input
            }], sql: [{
                type: Input
            }], handler: [{
                type: Input
            }], col: [{
                type: Input
            }], data: [{
                type: Input
            }], class: [{
                type: Input
            }], style: [{
                type: Input
            }], id: [{
                type: Input
            }], id2: [{
                type: Input
            }], id3: [{
                type: Input
            }], hint: [{
                type: Input
            }], icon: [{
                type: Input
            }], label: [{
                type: Input
            }], placeholder: [{
                type: Input
            }], bs_row: [{
                type: Input
            }], bs_col: [{
                type: Input
            }], top_label: [{
                type: Input
            }], change: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,