import { Component, Input, Output, EventEmitter } from '@angular/core';
import { CommonModule } from '@angular/common';
import { SqlDialogComponent } from '../sql-dialog/sql-dialog.component';
import { SqlDeleteDialogComponent } from '../sql-delete-dialog/sql-delete-dialog.component';
import * as i0 from "@angular/core";
import * as i1 from "../data.service";
import * as i2 from "@angular/material/dialog";
import * as i3 from "@angular/common";
export class SqlDeleteComponent {
    constructor(_dataService, dialog) {
        this._dataService = _dataService;
        this.dialog = dialog;
        this.data = {};
        this.label = 'Delete Record';
        this.warning = 'Are you sure you want to delete this record?';
        this.class = 'btn btn-danger';
        this.style = '';
        this.change = new EventEmitter();
        this.counter = 0;
        this.myObj = this._dataService.dataSubject.subscribe(d => {
            this.data = d;
            this.counter++;
        });
    }
    handleClick(enterAnimationDuration, exitAnimationDuration) {
        this.dialog.open(SqlDeleteDialogComponent, {
            width: '350px',
            enterAnimationDuration,
            exitAnimationDuration,
        });
    }
    ngOnDestroy() {
        //    this.myObj.unsubscribe();
    }
    ngOnInit() {
    }
}
SqlDeleteComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.3", ngImport: i0, type: SqlDeleteComponent, deps: [{ token: i1.SQLDataService }, { token: i2.MatDialog }], target: i0.ɵɵFactoryTarget.Component });
SqlDeleteComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.3", type: SqlDeleteComponent, isStandalone: true, selector: "sql-delete", inputs: { data: "data", label: "label", warning: "warning", class: "class", style: "style" }, outputs: { change: "change" }, ngImport: i0, template: "<span *ngIf=\"data?.id!=''&&data?.id!='0'\" class=\"m-2 p-2\">\n    <button [ngClass]=\"class\" [style]=\"style\" (click)=\"handleClick('300ms', '150ms')\">{{ label }}</button> \n</span>", styles: [""], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i3.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.3", ngImport: i0, type: SqlDeleteComponent, decorators: [{
            type: Component,
            args: [{ selector: 'sql-delete', standalone: true, imports: [CommonModule, SqlDialogComponent], template: "<span *ngIf=\"data?.id!=''&&data?.id!='0'\" class=\"m-2 p-2\">\n    <button [ngClass]=\"class\" [style]=\"style\" (click)=\"handleClick('300ms', '150ms')\">{{ label }}</button> \n</span>" }]
        }], ctorParameters: function () { return [{ type: i1.SQLDataService }, { type: i2.MatDialog }]; }, propDecorators: { data: [{
                type: Input
            }], label: [{
                type: Input
            }], warning: [{
                type: Input
            }], class: [{
                type: Input
            }], style: [{
                type: Input
            }], change: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3FsLWRlbGV0ZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9zcWwtY29tcG9uZW50cy9zcmMvbGliL3NxbC1kZWxldGUvc3FsLWRlbGV0ZS5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9zcWwtY29tcG9uZW50cy9zcmMvbGliL3NxbC1kZWxldGUvc3FsLWRlbGV0ZS5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFZLE1BQU0sZUFBZSxDQUFDO0FBQ3pGLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUkvQyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUN4RSxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxrREFBa0QsQ0FBQzs7Ozs7QUFVNUYsTUFBTSxPQUFPLGtCQUFrQjtJQWE3QixZQUFtQixZQUEyQixFQUFTLE1BQWlCO1FBQXJELGlCQUFZLEdBQVosWUFBWSxDQUFlO1FBQVMsV0FBTSxHQUFOLE1BQU0sQ0FBVztRQVQvRCxTQUFJLEdBQU0sRUFBRSxDQUFDO1FBQ2IsVUFBSyxHQUFRLGVBQWUsQ0FBQztRQUM3QixZQUFPLEdBQVEsOENBQThDLENBQUM7UUFDOUQsVUFBSyxHQUFRLGdCQUFnQixDQUFDO1FBQzlCLFVBQUssR0FBUSxFQUFFLENBQUM7UUFFekIsV0FBTSxHQUFzQixJQUFJLFlBQVksRUFBTyxDQUFDO1FBQ3BELFlBQU8sR0FBVyxDQUFDLENBQUM7UUFHbEIsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUU7WUFDdkQsSUFBSSxDQUFDLElBQUksR0FBQyxDQUFDLENBQUM7WUFDWixJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDakIsQ0FBQyxDQUFDLENBQUE7SUFDSixDQUFDO0lBRUQsV0FBVyxDQUFDLHNCQUE4QixFQUFFLHFCQUE2QjtRQUN2RSxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyx3QkFBd0IsRUFBRTtZQUN6QyxLQUFLLEVBQUUsT0FBTztZQUNkLHNCQUFzQjtZQUN0QixxQkFBcUI7U0FDdEIsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELFdBQVc7UUFDYiwrQkFBK0I7SUFDN0IsQ0FBQztJQUNELFFBQVE7SUFFUixDQUFDOzsrR0FqQ1Usa0JBQWtCO21HQUFsQixrQkFBa0IsbU1DaEIvQiw0TEFFTyx5RERVSyxZQUFZOzJGQUlYLGtCQUFrQjtrQkFQOUIsU0FBUzsrQkFDRSxZQUFZLGNBQ1YsSUFBSSxXQUNQLENBQUMsWUFBWSxFQUFFLGtCQUFrQixDQUFDOzZIQVFsQyxJQUFJO3NCQUFaLEtBQUs7Z0JBQ0csS0FBSztzQkFBYixLQUFLO2dCQUNHLE9BQU87c0JBQWYsS0FBSztnQkFDRyxLQUFLO3NCQUFiLEtBQUs7Z0JBQ0csS0FBSztzQkFBYixLQUFLO2dCQUVOLE1BQU07c0JBREwsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIsT25EZXN0cm95IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgU1FMRGF0YVNlcnZpY2UgfSBmcm9tICcuLi9kYXRhLnNlcnZpY2UnOyBcbmltcG9ydCB7IFN1YmplY3QsIFN1YnNjcmlwdGlvbiB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgTWF0RGlhbG9nLCBNYXREaWFsb2dSZWYgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9kaWFsb2cnO1xuaW1wb3J0IHsgU3FsRGlhbG9nQ29tcG9uZW50IH0gZnJvbSAnLi4vc3FsLWRpYWxvZy9zcWwtZGlhbG9nLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTcWxEZWxldGVEaWFsb2dDb21wb25lbnQgfSBmcm9tICcuLi9zcWwtZGVsZXRlLWRpYWxvZy9zcWwtZGVsZXRlLWRpYWxvZy5jb21wb25lbnQnO1xuXG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3NxbC1kZWxldGUnLFxuICBzdGFuZGFsb25lOiB0cnVlLFxuICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlLCBTcWxEaWFsb2dDb21wb25lbnRdLFxuICB0ZW1wbGF0ZVVybDogJy4vc3FsLWRlbGV0ZS5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3NxbC1kZWxldGUuY29tcG9uZW50LmNzcyddXG59KVxuZXhwb3J0IGNsYXNzIFNxbERlbGV0ZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcblxuICBteU9iaiE6IFN1YnNjcmlwdGlvbjtcblxuICBASW5wdXQoKSBkYXRhOiBhbnk9e307XG4gIEBJbnB1dCgpIGxhYmVsOiBhbnkgPSAnRGVsZXRlIFJlY29yZCc7XG4gIEBJbnB1dCgpIHdhcm5pbmc6IGFueSA9ICdBcmUgeW91IHN1cmUgeW91IHdhbnQgdG8gZGVsZXRlIHRoaXMgcmVjb3JkPyc7XG4gIEBJbnB1dCgpIGNsYXNzOiBhbnkgPSAnYnRuIGJ0bi1kYW5nZXInO1xuICBASW5wdXQoKSBzdHlsZTogYW55ID0gJyc7XG4gIEBPdXRwdXQoKVxuICBjaGFuZ2U6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG4gIGNvdW50ZXI6IG51bWJlciA9IDA7XG5cbiAgY29uc3RydWN0b3IocHVibGljIF9kYXRhU2VydmljZTpTUUxEYXRhU2VydmljZSwgcHVibGljIGRpYWxvZzogTWF0RGlhbG9nKSB7IFxuICAgIHRoaXMubXlPYmogPSB0aGlzLl9kYXRhU2VydmljZS5kYXRhU3ViamVjdC5zdWJzY3JpYmUoZCA9PiB7XG4gICAgICB0aGlzLmRhdGE9ZDtcbiAgICAgIHRoaXMuY291bnRlcisrO1xuICAgIH0pXG4gIH1cblxuICBoYW5kbGVDbGljayhlbnRlckFuaW1hdGlvbkR1cmF0aW9uOiBzdHJpbmcsIGV4aXRBbmltYXRpb25EdXJhdGlvbjogc3RyaW5nKTogdm9pZCB7XG4gICAgdGhpcy5kaWFsb2cub3BlbihTcWxEZWxldGVEaWFsb2dDb21wb25lbnQsIHtcbiAgICAgIHdpZHRoOiAnMzUwcHgnLFxuICAgICAgZW50ZXJBbmltYXRpb25EdXJhdGlvbixcbiAgICAgIGV4aXRBbmltYXRpb25EdXJhdGlvbixcbiAgICB9KTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCk6IHZvaWQge1xuLy8gICAgdGhpcy5teU9iai51bnN1YnNjcmliZSgpO1xuICB9XG4gIG5nT25Jbml0KCk6IHZvaWQge1xuXG4gIH1cblxufVxuIiwiPHNwYW4gKm5nSWY9XCJkYXRhPy5pZCE9JycmJmRhdGE/LmlkIT0nMCdcIiBjbGFzcz1cIm0tMiBwLTJcIj5cbiAgICA8YnV0dG9uIFtuZ0NsYXNzXT1cImNsYXNzXCIgW3N0eWxlXT1cInN0eWxlXCIgKGNsaWNrKT1cImhhbmRsZUNsaWNrKCczMDBtcycsICcxNTBtcycpXCI+e3sgbGFiZWwgfX08L2J1dHRvbj4gXG48L3NwYW4+Il19