import { Component, Input, Output, EventEmitter, ContentChildren } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { Ng2SearchPipeModule } from 'ng2-search-filter';
import { NgxTablePaginationModule } from 'ngx-table-pagination';
import * as i0 from "@angular/core";
import * as i1 from "../data.service";
import * as i2 from "@angular/common";
export class SqlEditPreview2Component {
    constructor(_dataService) {
        this._dataService = _dataService;
        this.format = { title: '', search: '', class: '', style: '', left_column: [], right_column: [], buttons: [] };
        this.data = '';
        this.use_parameters = 'N';
        this.function = '';
        this.sql = '';
        this.card = "Y";
        this.card_class = '';
        this.card_style = '';
        this.container_class = 'container-fluid m-2 p-2';
        this.container_style = '';
        this.closable = "N";
        this.bs_row = 'N';
        this.bs_col = '';
        this.list_class = 'table table-striped table-condensed';
        this.list_style = '';
        this.title = 'Title Not Set';
        this.id = '0';
        this.id2 = '0';
        this.id3 = '0';
        this.left = 'col-6';
        this.right = 'col-6';
        this.class = '';
        this.style = "";
        this.row_click = new EventEmitter();
        this.parameters = { page: '', id: '', id2: '', id3: '' };
        this.last_parameters = { page: 'xxx', id: 'xxx', id2: 'xxx', id3: 'xxx' };
        this.counter = 0;
        this.page = '';
        this.adding = 'N';
    }
    ngOnInit() {
    }
    rowClick(m) {
        this.row_click.emit(m);
    }
    addClick() {
        let p = { id: '', id2: '', id3: '' };
        if (this.adding === 'Y') {
            this.adding = 'N';
        }
        else {
            this.adding = 'Y';
        }
    }
    ngAfterViewInit() {
        if (this.use_parameters === 'Y') {
            this._dataService.paramSubject.subscribe(d => {
                this.parameters = d;
                this._dataService.getSQL(this.sql, this.parameters).subscribe((data) => {
                    this.list = data;
                    this.list.forEach(function (value) {
                        value.active = 'N';
                    });
                });
            });
        }
        if (this.use_parameters === 'N') {
            this.parameters.page = this.page;
            this.parameters.id = this.id;
            this.parameters.id2 = this.id2;
            this.parameters.id3 = this.id3;
            console.log(this.parameters);
            this._dataService.getSQL(this.sql, this.parameters).subscribe((data) => {
                if (data[0] !== undefined) {
                    this.list = data[0];
                }
            });
        }
        this.format.title = this.title;
        this.format.class = this.class;
        this.format.style = this.style;
        this.left_row_list.forEach((e) => {
            let left_column_template = { column_name: '', class: '', type: '', style: '', title: '', value: '' };
            if (e.nativeElement.nodeName == 'TH') {
                left_column_template.type = "data";
                left_column_template.value = e.nativeElement.id;
                left_column_template.title = e.nativeElement.innerHTML;
            }
            if (e.nativeElement.nodeName == 'TD') {
                left_column_template.type = "boilerplate";
                left_column_template.value = '';
                left_column_template.title = e.nativeElement.innerHTML;
            }
            if (e.nativeElement.className !== undefined) {
                left_column_template.class = e.nativeElement.className;
            }
            left_column_template.style = e.nativeElement.style.cssText;
            this.format.left_column.push(left_column_template);
        });
        this.right_row_list.forEach((e) => {
            let right_column_template = { column_name: '', class: '', type: '', style: '', title: '', value: '' };
            if (e.nativeElement.nodeName == 'TH') {
                right_column_template.type = "data";
                right_column_template.value = e.nativeElement.id;
                right_column_template.title = e.nativeElement.innerHTML;
            }
            if (e.nativeElement.nodeName == 'TD') {
                right_column_template.type = "boilerplate";
                right_column_template.value = '';
                right_column_template.title = e.nativeElement.innerHTML;
            }
            if (e.nativeElement.className !== undefined) {
                right_column_template.class = e.nativeElement.className;
            }
            right_column_template.style = e.nativeElement.style.cssText;
            this.format.right_column.push(right_column_template);
        });
        if (this.last_parameters.page != this.parameters.page ||
            this.last_parameters.id != this.parameters.id ||
            this.last_parameters.id2 != this.parameters.id2 ||
            this.last_parameters.id3 != this.parameters.id3) {
            this.last_parameters.page = this.parameters.page;
            this.last_parameters.id = this.parameters.id;
            this.last_parameters.id2 = this.parameters.id2;
            this.last_parameters.id3 = this.parameters.id3;
            console.log("Getting SQL");
            console.log(this.sql);
            console.log(this.parameters);
            this.myDataObs = this._dataService.getSQL(this.sql, this.parameters).subscribe((data) => {
                if (data[0] !== undefined) {
                    this.list = data[0];
                    console.log(this.list);
                }
            });
        }
    }
    tableRefresh() {
        this.myDataObs.unsubscribe();
        this.myDataObs = this._dataService.getSQL(this.sql, this.parameters).subscribe((data) => {
            if (data[0] !== undefined) {
                this.list = data[0];
            }
        });
    }
    ngOnDestroy() {
        this.myObs.unsubscribe();
        this.myDataObs.unsubscribe();
    }
}
SqlEditPreview2Component.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.3", ngImport: i0, type: SqlEditPreview2Component, deps: [{ token: i1.SQLDataService }], target: i0.ɵɵFactoryTarget.Component });
SqlEditPreview2Component.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.3", type: SqlEditPreview2Component, isStandalone: true, selector: "lib-sql-edit-preview2", inputs: { use_parameters: "use_parameters", function: "function", sql: "sql", card: "card", card_class: "card_class", card_style: "card_style", container_class: "container_class", container_style: "container_style", closable: "closable", bs_row: "bs_row", bs_col: "bs_col", list_class: "list_class", list_style: "list_style", title: "title", id: "id", id2: "id2", id3: "id3", left: "left", right: "right", class: "class", style: "style" }, outputs: { row_click: "row_click" }, queries: [{ propertyName: "left_row_list", predicate: ["left"] }, { propertyName: "right_row_list", predicate: ["right"] }], ngImport: i0, template: "<!-- NOT A CARD FORMAT-->\n<div *ngIf=\"card!='Y'\" [class]=\"container_class\" [style]=\"container_style\">\n    <div class=\"card\">\n                <ul class=\"list-group list-group-flush\">\n                    <li class=\"list-group-item\" style=\"background-color: lightgray;\">\n                        <div class=\"row\" style=\"width:100%;\">\n                            <div class=\"col-md-9\">\n                                <h2>{{ title }}</h2>\n                            </div>\n                            <div class=\"col-md-3\" style=\"text-align: right;\">\n                                <button (click)=\"addClick()\" class=\"btn btn-primary\"><i class=\"bi bi-plus-square\"></i></button>\n                            </div>\n                        </div>\n                    </li>\n                    <div *ngIf=\"adding=='Y'\" class=\"row\">\n                        <div class=\"col-12\">\n                            <ng-container *ngTemplateOutlet=\"contentTmpl\"></ng-container>\n                        </div>\n                        <div class=\"col-12\" style=\"text-align: right;\">\n                            <button (click)=\"addClick()\" class=\"btn btn-secondary\">Close</button>\n                        </div>\n                    </div>\n                    <li class=\"list-group-item\" *ngIf=\"adding!='Y'\">\n                        <div class=\"row\">\n                            <div class=\"col-6\">\n                                <ul class=\"list-group list-group-flush\">\n                                    <ng-container *ngFor=\"let m of format.left_column\">\n                                        <li class=\"list-group-item\" *ngIf=\"m.type=='data'\">\n                                            <div class=\"row\">\n                                                <div [class]=\"left\">\n                                                <b>{{ m.title }}</b>\n                                                </div>\n                                                <div [class]=\"right\" [innerHTML]=\"list[m.value]\">\n                                                </div>\n                                            </div>\n                                        </li>  \n                                        <li class=\"list-group-item\" *ngIf=\"m.type!='data'\">\n                                            <div class=\"row\">\n                                                <div class=\"col-12\">\n                                                <b>{{ m.title }}</b>\n                                                </div>\n                                            </div>\n                                        </li>    \n                                    </ng-container>     \n                                </ul>\n                            </div>\n                            <div class=\"col-6\">\n                                <ul class=\"list-group list-group-flush\">\n                                    <ng-container *ngFor=\"let m of format.right_column\">\n                                        <li class=\"list-group-item\" *ngIf=\"m.type=='data'\">\n                                            <div class=\"row\">\n                                                <div [class]=\"left\">\n                                                <b>{{ m.title }}</b>\n                                                </div>\n                                                <div [class]=\"right\" [innerHTML]=\"list[m.value]\">\n                                                </div>\n                                            </div>\n                                        </li>  \n                                        <li class=\"list-group-item\" *ngIf=\"m.type!='data'\">\n                                            <div class=\"row\">\n                                                <div class=\"col-12\">\n                                                <b>{{ m.title }}</b>\n                                                </div>\n                                            </div>\n                                        </li>    \n                                    </ng-container>     \n                                </ul>\n                            </div>                            \n                        </div>\n                    </li>\n                </ul>\n    </div>              \n</div>\n<div *ngIf=\"card=='Y'\" [class]=\"container_class\" [style]=\"container_style\">\n<div class=\"card\">\n    <div class=\"card-header\">\n        <div class=\"row\" style=\"width:100%;\">\n            <div class=\"col-md-9\">\n                <h2>{{ title }}</h2>\n            </div>\n            <div class=\"col-md-3\" style=\"text-align: right;\">\n                <button (click)=\"addClick()\" class=\"btn btn-primary\"><i class=\"bi bi-plus-square\"></i></button>\n            </div>\n        </div>\n    </div>\n    <div class=\"card-body\">\n        <div *ngIf=\"adding=='Y'\" class=\"row\">\n            <div class=\"col-12\">\n                <ng-container *ngTemplateOutlet=\"contentTmpl\"></ng-container>\n            </div>\n            <div class=\"col-12\" style=\"text-align: right;\">\n                <button (click)=\"addClick()\" class=\"btn btn-secondary\">Close</button>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-6\">\n                <ul class=\"list-group list-group-flush\">\n                    <ng-container *ngFor=\"let m of format.left_column\">\n                        <li class=\"list-group-item\" *ngIf=\"m.type=='data'\" class=\"p-2\">\n                            <div class=\"row\">\n                                <div [class]=\"left\">\n                                <b>{{ m.title }}</b>\n                                </div>\n                                <div [class]=\"right\" [innerHTML]=\"list[m.value]\">\n                                </div>\n                            </div>\n                        </li>  \n                        <li class=\"list-group-item\" *ngIf=\"m.type!='data'\" class=\"p-2\">\n                            <div class=\"row\">\n                                <div class=\"col-12\">\n                                <b>{{ m.title }}</b>\n                                </div>\n                            </div>\n                        </li>    \n                    </ng-container>     \n                </ul>\n            </div>\n            <div class=\"col-6\">\n                <ul class=\"list-group list-group-flush\">\n                    <ng-container *ngFor=\"let m of format.right_column\">\n                        <li class=\"list-group-item\" *ngIf=\"m.type=='data'\" class=\"p-2\">\n                            <div class=\"row\">\n                                <div [class]=\"left\">\n                                <b>{{ m.title }}</b>\n                                </div>\n                                <div [class]=\"right\" [innerHTML]=\"list[m.value]\">\n                                </div>\n                            </div>\n                        </li>  \n                        <li class=\"list-group-item\" *ngIf=\"m.type!='data'\" class=\"p-2\">\n                            <div class=\"row\">\n                                <div class=\"col-12\">\n                                <b>{{ m.title }}</b>\n                                </div>\n                            </div>\n                        </li>    \n                    </ng-container>     \n                </ul>\n            </div>            \n        </div>\n    </div>\n  </div>\n</div>\n<ng-template #contentTmpl>\n    <ng-content select=\"[form]\"></ng-content>\n</ng-template>\n", styles: [""], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "ngmodule", type: FormsModule }, { kind: "ngmodule", type: NgxTablePaginationModule }, { kind: "ngmodule", type: Ng2SearchPipeModule }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.3", ngImport: i0, type: SqlEditPreview2Component, decorators: [{
            type: Component,
            args: [{ selector: 'lib-sql-edit-preview2', standalone: true, imports: [CommonModule,
                        FormsModule,
                        NgxTablePaginationModule,
                        Ng2SearchPipeModule], template: "<!-- NOT A CARD FORMAT-->\n<div *ngIf=\"card!='Y'\" [class]=\"container_class\" [style]=\"container_style\">\n    <div class=\"card\">\n                <ul class=\"list-group list-group-flush\">\n                    <li class=\"list-group-item\" style=\"background-color: lightgray;\">\n                        <div class=\"row\" style=\"width:100%;\">\n                            <div class=\"col-md-9\">\n                                <h2>{{ title }}</h2>\n                            </div>\n                            <div class=\"col-md-3\" style=\"text-align: right;\">\n                                <button (click)=\"addClick()\" class=\"btn btn-primary\"><i class=\"bi bi-plus-square\"></i></button>\n                            </div>\n                        </div>\n                    </li>\n                    <div *ngIf=\"adding=='Y'\" class=\"row\">\n                        <div class=\"col-12\">\n                            <ng-container *ngTemplateOutlet=\"contentTmpl\"></ng-container>\n                        </div>\n                        <div class=\"col-12\" style=\"text-align: right;\">\n                            <button (click)=\"addClick()\" class=\"btn btn-secondary\">Close</button>\n                        </div>\n                    </div>\n                    <li class=\"list-group-item\" *ngIf=\"adding!='Y'\">\n                        <div class=\"row\">\n                            <div class=\"col-6\">\n                                <ul class=\"list-group list-group-flush\">\n                                    <ng-container *ngFor=\"let m of format.left_column\">\n                                        <li class=\"list-group-item\" *ngIf=\"m.type=='data'\">\n                                            <div class=\"row\">\n                                                <div [class]=\"left\">\n                                                <b>{{ m.title }}</b>\n                                                </div>\n                                                <div [class]=\"right\" [innerHTML]=\"list[m.value]\">\n                                                </div>\n                                            </div>\n                                        </li>  \n                                        <li class=\"list-group-item\" *ngIf=\"m.type!='data'\">\n                                            <div class=\"row\">\n                                                <div class=\"col-12\">\n                                                <b>{{ m.title }}</b>\n                                                </div>\n                                            </div>\n                                        </li>    \n                                    </ng-container>     \n                                </ul>\n                            </div>\n                            <div class=\"col-6\">\n                                <ul class=\"list-group list-group-flush\">\n                                    <ng-container *ngFor=\"let m of format.right_column\">\n                                        <li class=\"list-group-item\" *ngIf=\"m.type=='data'\">\n                                            <div class=\"row\">\n                                                <div [class]=\"left\">\n                                                <b>{{ m.title }}</b>\n                                                </div>\n                                                <div [class]=\"right\" [innerHTML]=\"list[m.value]\">\n                                                </div>\n                                            </div>\n                                        </li>  \n                                        <li class=\"list-group-item\" *ngIf=\"m.type!='data'\">\n                                            <div class=\"row\">\n                                                <div class=\"col-12\">\n                                                <b>{{ m.title }}</b>\n                                                </div>\n                                            </div>\n                                        </li>    \n                                    </ng-container>     \n                                </ul>\n                            </div>                            \n                        </div>\n                    </li>\n                </ul>\n    </div>              \n</div>\n<div *ngIf=\"card=='Y'\" [class]=\"container_class\" [style]=\"container_style\">\n<div class=\"card\">\n    <div class=\"card-header\">\n        <div class=\"row\" style=\"width:100%;\">\n            <div class=\"col-md-9\">\n                <h2>{{ title }}</h2>\n            </div>\n            <div class=\"col-md-3\" style=\"text-align: right;\">\n                <button (click)=\"addClick()\" class=\"btn btn-primary\"><i class=\"bi bi-plus-square\"></i></button>\n            </div>\n        </div>\n    </div>\n    <div class=\"card-body\">\n        <div *ngIf=\"adding=='Y'\" class=\"row\">\n            <div class=\"col-12\">\n                <ng-container *ngTemplateOutlet=\"contentTmpl\"></ng-container>\n            </div>\n            <div class=\"col-12\" style=\"text-align: right;\">\n                <button (click)=\"addClick()\" class=\"btn btn-secondary\">Close</button>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-6\">\n                <ul class=\"list-group list-group-flush\">\n                    <ng-container *ngFor=\"let m of format.left_column\">\n                        <li class=\"list-group-item\" *ngIf=\"m.type=='data'\" class=\"p-2\">\n                            <div class=\"row\">\n                                <div [class]=\"left\">\n                                <b>{{ m.title }}</b>\n                                </div>\n                                <div [class]=\"right\" [innerHTML]=\"list[m.value]\">\n                                </div>\n                            </div>\n                        </li>  \n                        <li class=\"list-group-item\" *ngIf=\"m.type!='data'\" class=\"p-2\">\n                            <div class=\"row\">\n                                <div class=\"col-12\">\n                                <b>{{ m.title }}</b>\n                                </div>\n                            </div>\n                        </li>    \n                    </ng-container>     \n                </ul>\n            </div>\n            <div class=\"col-6\">\n                <ul class=\"list-group list-group-flush\">\n                    <ng-container *ngFor=\"let m of format.right_column\">\n                        <li class=\"list-group-item\" *ngIf=\"m.type=='data'\" class=\"p-2\">\n                            <div class=\"row\">\n                                <div [class]=\"left\">\n                                <b>{{ m.title }}</b>\n                                </div>\n                                <div [class]=\"right\" [innerHTML]=\"list[m.value]\">\n                                </div>\n                            </div>\n                        </li>  \n                        <li class=\"list-group-item\" *ngIf=\"m.type!='data'\" class=\"p-2\">\n                            <div class=\"row\">\n                                <div class=\"col-12\">\n                                <b>{{ m.title }}</b>\n                                </div>\n                            </div>\n                        </li>    \n                    </ng-container>     \n                </ul>\n            </div>            \n        </div>\n    </div>\n  </div>\n</div>\n<ng-template #contentTmpl>\n    <ng-content select=\"[form]\"></ng-content>\n</ng-template>\n" }]
        }], ctorParameters: function () { return [{ type: i1.SQLDataService }]; }, propDecorators: { left_row_list: [{
                type: ContentChildren,
                args: ['left']
            }], right_row_list: [{
                type: ContentChildren,
                args: ['right']
            }], use_parameters: [{
                type: Input
            }], function: [{
                type: Input
            }], sql: [{
                type: Input
            }], card: [{
                type: Input
            }], card_class: [{
                type: Input
            }], card_style: [{
                type: Input
            }], container_class: [{
                type: Input
            }], container_style: [{
                type: Input
            }], closable: [{
                type: Input
            }], bs_row: [{
                type: Input
            }], bs_col: [{
                type: Input
            }], list_class: [{
                type: Input
            }], list_style: [{
                type: Input
            }], title: [{
                type: Input
            }], id: [{
                type: Input
            }], id2: [{
                type: Input
            }], id3: [{
                type: Input
            }], left: [{
                type: Input
            }], right: [{
                type: Input
            }], class: [{
                type: Input
            }], style: [{
                type: Input
            }], row_click: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,