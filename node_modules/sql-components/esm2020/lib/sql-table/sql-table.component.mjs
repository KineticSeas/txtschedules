import { Component, Input, Output, EventEmitter, ContentChildren } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { Ng2SearchPipeModule } from 'ng2-search-filter';
import { NgxTablePaginationModule } from 'ngx-table-pagination';
import * as i0 from "@angular/core";
import * as i1 from "../data.service";
import * as i2 from "@angular/common";
import * as i3 from "@angular/forms";
import * as i4 from "ngx-table-pagination";
import * as i5 from "ng2-search-filter";
export class SqlTableComponent {
    constructor(_dataService) {
        this._dataService = _dataService;
        // format: is built from ContentChildren and Input Parameters
        this.format = { title: '', search: '', class: '', style: '', columns: [], buttons: [] };
        this.row_placeholder = 'row';
        this.col_placeholder = 'col-12';
        //-- Inputs
        this.data = '';
        this.use_parameters = 'N';
        this.function = ''; // Use Data if data comes from function.
        this.sql = ''; // SQL that gets data.
        this.card = "Y"; // Show the form in a card Y/N
        this.card_class = '';
        this.card_style = '';
        this.container_class = 'container-fluid m-2 p-2'; // Class of the outer ng-container.
        this.container_style = ''; // Style of the outer ng-container.
        this.closable = "N"; // Is the form closable Y/N
        this.search = 'TOP'; // Location of the search box.
        this.bs_row = 'Y'; // Y means add a bootstrap row.
        this.bs_col = 'col-sm-12 col-lg-12 col-xl-12'; // What bootstrap columns.
        this.table_class = 'table table-striped table-condensed'; // class of the table.
        this.table_style = ''; // style of the table.
        this.edit = 'N'; // Add custom edit button.
        this.title = 'Title Not Set'; // title of the page.
        this.pagination = 'Y'; // Include pagination.
        this.pagesize = 25; // rows per page for pagination.
        this.id = '0'; // id for where clause.
        this.id2 = '0'; // id for where clause.
        this.id3 = '0'; // id for where clause.
        this.open = "Y"; // Does a closable list start open.
        this.class = 'table table-striped table-condensed'; // Class for the table container.
        this.style = ""; // Style for the table container.
        this.handler = 'default'; // what handler is used to process the form.
        this.button_click = new EventEmitter();
        this.row_click = new EventEmitter();
        this.top_button_click = new EventEmitter();
        this.parameters = { page: '', id: '', id2: '', id3: '' };
        this.last_parameters = { page: 'xxx', id: 'xxx', id2: 'xxx', id3: 'xxx' };
        this.counter = 0;
        this.page = '';
    }
    ngOnInit() {
        this.format.search = 'Y';
    }
    topButtonClick(m) {
        this.top_button_click.emit(m);
    }
    rowClick(m) {
        this.row_click.emit(m);
    }
    buttonClick(m) {
        this.button_click.emit(m);
    }
    ngAfterViewInit() {
        if (this.use_parameters === 'Y') {
            this._dataService.paramSubject.subscribe(d => {
                this.parameters = d;
                this._dataService.getSQL(this.sql, this.parameters).subscribe((data) => {
                    this.list = data;
                    this.list.forEach(function (value) {
                        value.active = 'N';
                    });
                });
            });
        }
        if (this.use_parameters === 'N') {
            this.parameters.page = this.page;
            this.parameters.id = this.id;
            this.parameters.id2 = this.id2;
            this.parameters.id3 = this.id3;
            this._dataService.getSQL(this.sql, this.parameters).subscribe((data) => {
                this.list = data;
                this.list.forEach(function (value) {
                    value.active = 'N';
                });
            });
        }
        this.format.title = this.title;
        this.format.class = this.class;
        this.format.style = this.style;
        this.format.pagination = this.pagination;
        this.format.pagesize = this.pagesize;
        if (this.bs_row == 'Y') {
            this.row_placeholder = "row";
        }
        else {
            this.row_placeholder = "none";
        }
        this.col_placeholder = this.bs_col;
        this.column_list.forEach((e) => {
            let column_template = { column_name: '', class: '', type: '', style: '', title: '', value: '' };
            //-- TH is data column
            if (e.nativeElement.nodeName == 'TH') {
                column_template.type = "data";
                column_template.value = e.nativeElement.id;
                column_template.title = e.nativeElement.innerHTML;
            }
            //-- BUTTON is button column
            if (e.nativeElement.nodeName == 'BUTTON') {
                column_template.type = "button";
                column_template.value = '';
                column_template.title = e.nativeElement.innerHTML;
            }
            //-- TD is text column
            if (e.nativeElement.nodeName == 'TD') {
                column_template.type = "text";
                column_template.title = '';
                column_template.value = e.nativeElement.innerHTML;
            }
            if (e.nativeElement.className !== undefined) {
                column_template.class = e.nativeElement.className;
            }
            column_template.style = e.nativeElement.style.cssText;
            this.format.columns.push(column_template);
        });
        if (this.last_parameters.page != this.parameters.page ||
            this.last_parameters.id != this.parameters.id ||
            this.last_parameters.id2 != this.parameters.id2 ||
            this.last_parameters.id3 != this.parameters.id3) {
            this.last_parameters.page = this.parameters.page;
            this.last_parameters.id = this.parameters.id;
            this.last_parameters.id2 = this.parameters.id2;
            this.last_parameters.id3 = this.parameters.id3;
            this.myDataObs = this._dataService.getSQL(this.sql, this.parameters).subscribe((data) => {
                this.list = data;
            });
        }
    }
    tableRefresh() {
        this.myDataObs.unsubscribe();
        this.myDataObs = this._dataService.getSQL(this.sql, this.parameters).subscribe((data) => {
            this.list = data;
        });
    }
    ngOnDestroy() {
        this.myObs.unsubscribe();
        this.myDataObs.unsubscribe();
    }
}
SqlTableComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.3", ngImport: i0, type: SqlTableComponent, deps: [{ token: i1.SQLDataService }], target: i0.ɵɵFactoryTarget.Component });
SqlTableComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.3", type: SqlTableComponent, isStandalone: true, selector: "sql-table", inputs: { use_parameters: "use_parameters", function: "function", sql: "sql", card: "card", card_class: "card_class", card_style: "card_style", container_class: "container_class", container_style: "container_style", closable: "closable", search: "search", bs_row: "bs_row", bs_col: "bs_col", table_class: "table_class", table_style: "table_style", edit: "edit", title: "title", pagination: "pagination", pagesize: "pagesize", id: "id", id2: "id2", id3: "id3", open: "open", class: "class", style: "style", handler: "handler" }, outputs: { button_click: "button_click", row_click: "row_click", top_button_click: "top_button_click" }, queries: [{ propertyName: "title_list", predicate: ["title"] }, { propertyName: "column_list", predicate: ["column"] }], ngImport: i0, template: "<!-- NOT A CARD FORMAT-->\n<div *ngIf=\"card!='Y'\" [class]=\"container_class\" [style]=\"container_style\">\n    <div [class]=\"row_placeholder\">\n        <div [class]=\"col_placeholder\">\n            <div *ngIf=\"format.search=='TOP'\" class=\"row m-1 p-3\">\n                <div class=\"col-lg-6\">\n                    Search: <input style=\"max-width:320px;\" class=\"form-control\" type=\"text\" id=\"term\" name=\"term\" [(ngModel)]=\"term\"> \n                </div>\n            </div>\n            <div class=\"row p-2 mt-2 mb-2\">\n                <div class=\"col-md-12\">\n                    <h2>{{ title }}</h2>\n                </div>\n            </div>\n            <div *ngIf=\"format.buttons.length>0||format.search=='Y'\" class=\"row m-1 p-3\">\n                <div *ngIf=\"format.search=='Y'\" class=\"col-lg-6\">\n                    Search: <input style=\"max-width:320px;\" class=\"form-control\" type=\"text\" id=\"term\" name=\"term\" [(ngModel)]=\"term\"> \n                </div>\n                <div class=\"col-md-2\" *ngFor=\"let m of format.buttons\">\n                    <button (click)=\"topButtonClick(m.value);\" [class]=\"m.class\" [style]=\"m.style\" [innerHTML]=\"m.title\"></button>\n                </div>\n            </div>\n            <table [class]=\"table_class\" [style]=\"table_style\">\n                <thead>\n                    <tr class=\"p-2\">\n                        <ng-container *ngFor=\"let m of format.columns\">\n                            <th *ngIf=\"m.type!='button'\" class=\"p-2\">{{ m.title }}</th>\n                            <th *ngIf=\"m.type=='button'\" class=\"p-2\"></th>\n                        </ng-container>         \n                    </tr>\n                </thead>\n            <tbody>\n                <ng-container *ngFor=\"let m of list | filter: term | paginate: { currentPage: p , itemsPerPage: format.pagesize }\">\n                    <tr class=\"p-2\">\n                        <ng-container *ngFor=\"let n of format.columns\">\n                            <td (click)=\"rowClick(m)\" *ngIf=\"n['type']=='data'\" [innerHTML]=\"m[n['value']]\" [class]=\"n['class']\"></td>\n                            <td (click)=\"rowClick(m)\" *ngIf=\"n['type']=='text'\" [innerHTML]=\"n['value']\" [class]=\"n['class']\"></td>\n                            <td *ngIf=\"n['type']=='button'\">\n                                <button (click)=\"buttonClick(m)\" [class]=\"n.class\" [innerHTML]=\"n.title\"></button>\n                            </td>\n                        </ng-container>\n                    </tr> \n                </ng-container>\n            </tbody> \n            </table>\n        <div *ngIf=\"format.pagination=='Y'\">\n                <paging-controls (pageChange)=\"p = $event\" [isItemsPerPage]=\"false\"  \n                class=\"my-pagination\"></paging-controls> \n            </div> \n        </div> <!-- col -->\n    </div> <!-- row -->\n</div> <!-- container -->\n<!-- CARD FORMAT-->\n<div *ngIf=\"card=='Y'\" [class]=\"container_class\" [style]=\"container_style\">\n    <div [class]=\"row_placeholder\">\n        <div [class]=\"col_placeholder\">\n            <div class=\"card\">\n                <div class=\"card-header\" style=\"margin-top: 0px;\">\n                    <div class=\"row p-2 mt-2 mb-2\">\n                        <div class=\"col-md-12\">\n                            <h2>{{ title }}</h2>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"card-body\">\n                    <div *ngIf=\"format.search=='TOP'\" class=\"row m-1 p-3\">\n                        <div class=\"col-6\">\n                            Search: <input style=\"max-width:320px;\" class=\"form-control\" type=\"text\" id=\"term\" name=\"term\" [(ngModel)]=\"term\"> \n                        </div>\n                    </div>\n                    <div *ngIf=\"format.buttons.length>0||format.search=='Y'\" class=\"row m-1 p-3\">\n                        <div *ngIf=\"format.search=='Y'\" class=\"col-lg-6\">\n                            Search: <input style=\"max-width:320px;\" class=\"form-control\" type=\"text\" id=\"term\" name=\"term\" [(ngModel)]=\"term\"> \n                        </div>\n                        <div class=\"col-md-2\" *ngFor=\"let m of format.buttons\">\n                            <button (click)=\"topButtonClick(m.value);\" [class]=\"m.class\" [style]=\"m.style\" [innerHTML]=\"m.title\"></button>\n                        </div>\n                    </div>\n                    <table [class]=\"table_class\" [style]=\"table_style\">\n                        <thead>\n                            <ng-container *ngFor=\"let m of format.columns\">\n                                <th *ngIf=\"m.type!='button'\" [style]=\"m.style\" class=\"p-2\">{{ m.title }}</th>\n                                <th *ngIf=\"m.type=='button'\" [style]=\"m.style\" class=\"p-2\"></th>\n                            </ng-container>   \n                        </thead>\n                        <tbody>\n                            <ng-container *ngFor=\"let m of list | filter: term | paginate: { currentPage: p , itemsPerPage: format.pagesize }\">\n                                <tr class=\"p-2\">\n                                    <ng-container *ngFor=\"let n of format.columns\">\n                                        <td (click)=\"rowClick(m)\" [style]=\"m.style\"  *ngIf=\"n['type']=='data'\" [innerHTML]=\"m[n['value']]\" [class]=\"n['class']\"></td>\n                                        <td (click)=\"rowClick(m)\" [style]=\"m.style\"  *ngIf=\"n['type']=='text'\" [innerHTML]=\"n['value']\" [class]=\"n['class']\"></td>\n                                        <td *ngIf=\"n['type']=='button'\">\n                                            <button (click)=\"buttonClick(m)\" [style]=\"m.style\" [class]=\"n.class\" [innerHTML]=\"n.title\"></button>\n                                        </td>\n                                    </ng-container>\n                                </tr> \n                            </ng-container>\n                        </tbody> \n                    </table>\n                    <div *ngIf=\"format.pagination=='Y'\">\n                            <paging-controls (pageChange)=\"p = $event\" [isItemsPerPage]=\"false\"  \n                            class=\"my-pagination\"></paging-controls> \n                    </div>\n                </div> <!-- card-body -->\n            </div> <!-- card --> \n        </div>\n    </div>\n</div>", styles: [""], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "ngmodule", type: FormsModule }, { kind: "directive", type: i3.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i3.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i3.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "ngmodule", type: NgxTablePaginationModule }, { kind: "component", type: i4.PaginationComponent, selector: "paging-controls", inputs: ["maxSize", "previousLabel", "nextLabel", "screenReaderPaginationLabel", "screenReaderPageLabel", "screenReaderCurrentLabel", "directionLinks", "autoHide", "responsive", "id", "isItemsPerPage"], outputs: ["pageChange", "pageBoundsCorrection"] }, { kind: "pipe", type: i4.PaginationPipe, name: "paginate" }, { kind: "ngmodule", type: Ng2SearchPipeModule }, { kind: "pipe", type: i5.Ng2SearchPipe, name: "filter" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.3", ngImport: i0, type: SqlTableComponent, decorators: [{
            type: Component,
            args: [{ selector: 'sql-table', standalone: true, imports: [CommonModule,
                        FormsModule,
                        NgxTablePaginationModule,
                        Ng2SearchPipeModule], template: "<!-- NOT A CARD FORMAT-->\n<div *ngIf=\"card!='Y'\" [class]=\"container_class\" [style]=\"container_style\">\n    <div [class]=\"row_placeholder\">\n        <div [class]=\"col_placeholder\">\n            <div *ngIf=\"format.search=='TOP'\" class=\"row m-1 p-3\">\n                <div class=\"col-lg-6\">\n                    Search: <input style=\"max-width:320px;\" class=\"form-control\" type=\"text\" id=\"term\" name=\"term\" [(ngModel)]=\"term\"> \n                </div>\n            </div>\n            <div class=\"row p-2 mt-2 mb-2\">\n                <div class=\"col-md-12\">\n                    <h2>{{ title }}</h2>\n                </div>\n            </div>\n            <div *ngIf=\"format.buttons.length>0||format.search=='Y'\" class=\"row m-1 p-3\">\n                <div *ngIf=\"format.search=='Y'\" class=\"col-lg-6\">\n                    Search: <input style=\"max-width:320px;\" class=\"form-control\" type=\"text\" id=\"term\" name=\"term\" [(ngModel)]=\"term\"> \n                </div>\n                <div class=\"col-md-2\" *ngFor=\"let m of format.buttons\">\n                    <button (click)=\"topButtonClick(m.value);\" [class]=\"m.class\" [style]=\"m.style\" [innerHTML]=\"m.title\"></button>\n                </div>\n            </div>\n            <table [class]=\"table_class\" [style]=\"table_style\">\n                <thead>\n                    <tr class=\"p-2\">\n                        <ng-container *ngFor=\"let m of format.columns\">\n                            <th *ngIf=\"m.type!='button'\" class=\"p-2\">{{ m.title }}</th>\n                            <th *ngIf=\"m.type=='button'\" class=\"p-2\"></th>\n                        </ng-container>         \n                    </tr>\n                </thead>\n            <tbody>\n                <ng-container *ngFor=\"let m of list | filter: term | paginate: { currentPage: p , itemsPerPage: format.pagesize }\">\n                    <tr class=\"p-2\">\n                        <ng-container *ngFor=\"let n of format.columns\">\n                            <td (click)=\"rowClick(m)\" *ngIf=\"n['type']=='data'\" [innerHTML]=\"m[n['value']]\" [class]=\"n['class']\"></td>\n                            <td (click)=\"rowClick(m)\" *ngIf=\"n['type']=='text'\" [innerHTML]=\"n['value']\" [class]=\"n['class']\"></td>\n                            <td *ngIf=\"n['type']=='button'\">\n                                <button (click)=\"buttonClick(m)\" [class]=\"n.class\" [innerHTML]=\"n.title\"></button>\n                            </td>\n                        </ng-container>\n                    </tr> \n                </ng-container>\n            </tbody> \n            </table>\n        <div *ngIf=\"format.pagination=='Y'\">\n                <paging-controls (pageChange)=\"p = $event\" [isItemsPerPage]=\"false\"  \n                class=\"my-pagination\"></paging-controls> \n            </div> \n        </div> <!-- col -->\n    </div> <!-- row -->\n</div> <!-- container -->\n<!-- CARD FORMAT-->\n<div *ngIf=\"card=='Y'\" [class]=\"container_class\" [style]=\"container_style\">\n    <div [class]=\"row_placeholder\">\n        <div [class]=\"col_placeholder\">\n            <div class=\"card\">\n                <div class=\"card-header\" style=\"margin-top: 0px;\">\n                    <div class=\"row p-2 mt-2 mb-2\">\n                        <div class=\"col-md-12\">\n                            <h2>{{ title }}</h2>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"card-body\">\n                    <div *ngIf=\"format.search=='TOP'\" class=\"row m-1 p-3\">\n                        <div class=\"col-6\">\n                            Search: <input style=\"max-width:320px;\" class=\"form-control\" type=\"text\" id=\"term\" name=\"term\" [(ngModel)]=\"term\"> \n                        </div>\n                    </div>\n                    <div *ngIf=\"format.buttons.length>0||format.search=='Y'\" class=\"row m-1 p-3\">\n                        <div *ngIf=\"format.search=='Y'\" class=\"col-lg-6\">\n                            Search: <input style=\"max-width:320px;\" class=\"form-control\" type=\"text\" id=\"term\" name=\"term\" [(ngModel)]=\"term\"> \n                        </div>\n                        <div class=\"col-md-2\" *ngFor=\"let m of format.buttons\">\n                            <button (click)=\"topButtonClick(m.value);\" [class]=\"m.class\" [style]=\"m.style\" [innerHTML]=\"m.title\"></button>\n                        </div>\n                    </div>\n                    <table [class]=\"table_class\" [style]=\"table_style\">\n                        <thead>\n                            <ng-container *ngFor=\"let m of format.columns\">\n                                <th *ngIf=\"m.type!='button'\" [style]=\"m.style\" class=\"p-2\">{{ m.title }}</th>\n                                <th *ngIf=\"m.type=='button'\" [style]=\"m.style\" class=\"p-2\"></th>\n                            </ng-container>   \n                        </thead>\n                        <tbody>\n                            <ng-container *ngFor=\"let m of list | filter: term | paginate: { currentPage: p , itemsPerPage: format.pagesize }\">\n                                <tr class=\"p-2\">\n                                    <ng-container *ngFor=\"let n of format.columns\">\n                                        <td (click)=\"rowClick(m)\" [style]=\"m.style\"  *ngIf=\"n['type']=='data'\" [innerHTML]=\"m[n['value']]\" [class]=\"n['class']\"></td>\n                                        <td (click)=\"rowClick(m)\" [style]=\"m.style\"  *ngIf=\"n['type']=='text'\" [innerHTML]=\"n['value']\" [class]=\"n['class']\"></td>\n                                        <td *ngIf=\"n['type']=='button'\">\n                                            <button (click)=\"buttonClick(m)\" [style]=\"m.style\" [class]=\"n.class\" [innerHTML]=\"n.title\"></button>\n                                        </td>\n                                    </ng-container>\n                                </tr> \n                            </ng-container>\n                        </tbody> \n                    </table>\n                    <div *ngIf=\"format.pagination=='Y'\">\n                            <paging-controls (pageChange)=\"p = $event\" [isItemsPerPage]=\"false\"  \n                            class=\"my-pagination\"></paging-controls> \n                    </div>\n                </div> <!-- card-body -->\n            </div> <!-- card --> \n        </div>\n    </div>\n</div>" }]
        }], ctorParameters: function () { return [{ type: i1.SQLDataService }]; }, propDecorators: { title_list: [{
                type: ContentChildren,
                args: ['title']
            }], column_list: [{
                type: ContentChildren,
                args: ['column']
            }], use_parameters: [{
                type: Input
            }], function: [{
                type: Input
            }], sql: [{
                type: Input
            }], card: [{
                type: Input
            }], card_class: [{
                type: Input
            }], card_style: [{
                type: Input
            }], container_class: [{
                type: Input
            }], container_style: [{
                type: Input
            }], closable: [{
                type: Input
            }], search: [{
                type: Input
            }], bs_row: [{
                type: Input
            }], bs_col: [{
                type: Input
            }], table_class: [{
                type: Input
            }], table_style: [{
                type: Input
            }], edit: [{
                type: Input
            }], title: [{
                type: Input
            }], pagination: [{
                type: Input
            }], pagesize: [{
                type: Input
            }], id: [{
                type: Input
            }], id2: [{
                type: Input
            }], id3: [{
                type: Input
            }], open: [{
                type: Input
            }], class: [{
                type: Input
            }], style: [{
                type: Input
            }], handler: [{
                type: Input
            }], button_click: [{
                type: Output
            }], row_click: [{
                type: Output
            }], top_button_click: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,