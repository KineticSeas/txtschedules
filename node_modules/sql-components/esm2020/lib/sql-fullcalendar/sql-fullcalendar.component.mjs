import { Component, Input, Output, EventEmitter } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FullCalendarModule } from '@fullcalendar/angular';
import dayGridPlugin from '@fullcalendar/daygrid';
import InteractionPlugin from '@fullcalendar/interaction';
import * as i0 from "@angular/core";
import * as i1 from "../data.service";
import * as i2 from "@angular/router";
import * as i3 from "@fullcalendar/angular";
export class SqlFullcalendarComponent {
    handleDateClick(arg) {
    }
    constructor(_dataService, _router, _activatedRoute) {
        this._dataService = _dataService;
        this._router = _router;
        this._activatedRoute = _activatedRoute;
        //-- Inputs
        this.router = 'N'; // does data come from Router.
        this.sql = "select 'x' from dual"; // query to populate panel.          
        this.id = '0'; // Primary key for query.
        this.id2 = '0';
        this.id3 = '0';
        this.carßd = "Y"; // Show the panel in a card Y/N
        this.closable = "N"; // Is the panel closable Y/N
        this.open = "Y"; // Does a closable form start open.
        this.class = ""; // Class for the panel container.
        this.style = ""; // Style for the panel container.
        this.title = ""; // Title of the Panel.
        this.bs_row = 'Y'; // Y means add a bootstrap row.
        this.bs_col = 'col-sm-12 col-lg-6 col-xl-4'; // What bootstrap columns.
        this.params = { id: '', id2: '', id3: '' };
        this.calendarOptions = {
            initialView: 'dayGridMonth',
            plugins: [dayGridPlugin, InteractionPlugin],
            eventClick: this.handleDateClick.bind(this),
            events: []
        };
        this.change = new EventEmitter();
        this.counter = 0;
        this.parameterValue = '';
    }
    ngOnInit() {
    }
    ngAfterViewInit() {
        this.params.id = this.id;
        this.params.id2 = this.id2;
        this.params.id3 = this.id3;
        this.myObj = this._dataService.getCalendar(this.sql, this.params).subscribe((data) => {
            this.data = data;
            this.calendarOptions.events = this.data;
        });
    }
    ngDoCheck() {
    }
    ngOnChanges(changes) {
    }
    ngOnDestroy() {
        this.myObj.unsubscribe();
    }
}
SqlFullcalendarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.3", ngImport: i0, type: SqlFullcalendarComponent, deps: [{ token: i1.SQLDataService }, { token: i2.Router }, { token: i2.ActivatedRoute }], target: i0.ɵɵFactoryTarget.Component });
SqlFullcalendarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.3", type: SqlFullcalendarComponent, isStandalone: true, selector: "sql-fullcalendar", inputs: { router: "router", data: "data", sql: "sql", id: "id", id2: "id2", id3: "id3", carßd: "car\u00DFd", closable: "closable", open: "open", class: "class", style: "style", title: "title", bs_row: "bs_row", bs_col: "bs_col" }, outputs: { change: "change" }, usesOnChanges: true, ngImport: i0, template: "<div class=\"container-fluid row\">\n    <!--  <div class=\"col-sm-12\">\n          <div class=\"card\" class=\"card mt-3 mb-3 p-3\"> -->\n              <div class=\"d-none d-md-block row\">\n                  <div class=\"col-12\">\n                      <full-calendar [options]=\"calendarOptions\"></full-calendar>\n                  </div>\n    <!--          </div>\n          </div> -->\n      </div>\n  </div>", styles: [""], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "ngmodule", type: FullCalendarModule }, { kind: "component", type: i3.FullCalendarComponent, selector: "full-calendar", inputs: ["options", "deepChangeDetection", "events", "eventSources", "resources"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.3", ngImport: i0, type: SqlFullcalendarComponent, decorators: [{
            type: Component,
            args: [{ selector: 'sql-fullcalendar', standalone: true, imports: [CommonModule, FullCalendarModule], template: "<div class=\"container-fluid row\">\n    <!--  <div class=\"col-sm-12\">\n          <div class=\"card\" class=\"card mt-3 mb-3 p-3\"> -->\n              <div class=\"d-none d-md-block row\">\n                  <div class=\"col-12\">\n                      <full-calendar [options]=\"calendarOptions\"></full-calendar>\n                  </div>\n    <!--          </div>\n          </div> -->\n      </div>\n  </div>" }]
        }], ctorParameters: function () { return [{ type: i1.SQLDataService }, { type: i2.Router }, { type: i2.ActivatedRoute }]; }, propDecorators: { router: [{
                type: Input
            }], data: [{
                type: Input
            }], sql: [{
                type: Input
            }], id: [{
                type: Input
            }], id2: [{
                type: Input
            }], id3: [{
                type: Input
            }], carßd: [{
                type: Input
            }], closable: [{
                type: Input
            }], open: [{
                type: Input
            }], class: [{
                type: Input
            }], style: [{
                type: Input
            }], title: [{
                type: Input
            }], bs_row: [{
                type: Input
            }], bs_col: [{
                type: Input
            }], change: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,