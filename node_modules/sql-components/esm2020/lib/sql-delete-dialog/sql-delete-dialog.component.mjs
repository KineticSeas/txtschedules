import { Component, Input, EventEmitter } from '@angular/core';
import { CommonModule } from '@angular/common';
import { MatDialogModule } from '@angular/material/dialog';
import { MatButtonModule } from '@angular/material/button';
import * as i0 from "@angular/core";
import * as i1 from "../data.service";
import * as i2 from "@angular/material/dialog";
export class SqlDeleteDialogComponent {
    constructor(_dataService, dialog) {
        this._dataService = _dataService;
        this.dialog = dialog;
        this.data = {};
        this.change = new EventEmitter();
        this.myObj = this._dataService.dataSubject.subscribe(d => {
            this.data = d;
        });
    }
    ngOnDestroy() {
        this.myObj.unsubscribe();
    }
    ngOnInit() {
    }
    handleClick() {
        this.data['submit'] = 'D';
        this._dataService.pushNotification(this.data);
    }
}
SqlDeleteDialogComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.3", ngImport: i0, type: SqlDeleteDialogComponent, deps: [{ token: i1.SQLDataService }, { token: i2.MatDialog }], target: i0.ɵɵFactoryTarget.Component });
SqlDeleteDialogComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.3", type: SqlDeleteDialogComponent, isStandalone: true, selector: "lib-sql-delete-dialog", inputs: { data: "data" }, ngImport: i0, template: "<h1 mat-dialog-title>Delete Record</h1>\n<div mat-dialog-content>\n  Are you sure to want to delete this record?  This cannot be reversed.\n</div>\n<div mat-dialog-actions>\n  <button class=\"btn btn-primary\" mat-dialog-close>No</button>\n  <button style=\"margin-left: 20px;\" (click)=\"handleClick()\" class=\"btn btn-danger\" mat-dialog-close cdkFocusInitial>Yes</button>\n</div>", styles: [""], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "ngmodule", type: MatDialogModule }, { kind: "directive", type: i2.MatDialogClose, selector: "[mat-dialog-close], [matDialogClose]", inputs: ["aria-label", "type", "mat-dialog-close", "matDialogClose"], exportAs: ["matDialogClose"] }, { kind: "directive", type: i2.MatDialogTitle, selector: "[mat-dialog-title], [matDialogTitle]", inputs: ["id"], exportAs: ["matDialogTitle"] }, { kind: "directive", type: i2.MatDialogContent, selector: "[mat-dialog-content], mat-dialog-content, [matDialogContent]" }, { kind: "directive", type: i2.MatDialogActions, selector: "[mat-dialog-actions], mat-dialog-actions, [matDialogActions]", inputs: ["align"] }, { kind: "ngmodule", type: MatButtonModule }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.3", ngImport: i0, type: SqlDeleteDialogComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-sql-delete-dialog', standalone: true, imports: [CommonModule, MatDialogModule, MatButtonModule], template: "<h1 mat-dialog-title>Delete Record</h1>\n<div mat-dialog-content>\n  Are you sure to want to delete this record?  This cannot be reversed.\n</div>\n<div mat-dialog-actions>\n  <button class=\"btn btn-primary\" mat-dialog-close>No</button>\n  <button style=\"margin-left: 20px;\" (click)=\"handleClick()\" class=\"btn btn-danger\" mat-dialog-close cdkFocusInitial>Yes</button>\n</div>" }]
        }], ctorParameters: function () { return [{ type: i1.SQLDataService }, { type: i2.MatDialog }]; }, propDecorators: { data: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3FsLWRlbGV0ZS1kaWFsb2cuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvc3FsLWNvbXBvbmVudHMvc3JjL2xpYi9zcWwtZGVsZXRlLWRpYWxvZy9zcWwtZGVsZXRlLWRpYWxvZy5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9zcWwtY29tcG9uZW50cy9zcmMvbGliL3NxbC1kZWxldGUtZGlhbG9nL3NxbC1kZWxldGUtZGlhbG9nLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsS0FBSyxFQUFVLFlBQVksRUFBWSxNQUFNLGVBQWUsQ0FBQztBQUN6RixPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFHL0MsT0FBTyxFQUFhLGVBQWUsRUFBZ0IsTUFBTSwwQkFBMEIsQ0FBQztBQUVwRixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7Ozs7QUFTM0QsTUFBTSxPQUFPLHdCQUF3QjtJQVFuQyxZQUFtQixZQUEyQixFQUFTLE1BQWlCO1FBQXJELGlCQUFZLEdBQVosWUFBWSxDQUFlO1FBQVMsV0FBTSxHQUFOLE1BQU0sQ0FBVztRQUovRCxTQUFJLEdBQU0sRUFBRSxDQUFDO1FBQ3RCLFdBQU0sR0FBc0IsSUFBSSxZQUFZLEVBQU8sQ0FBQztRQUlsRCxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsV0FBVyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRTtZQUN2RCxJQUFJLENBQUMsSUFBSSxHQUFDLENBQUMsQ0FBQztRQUNkLENBQUMsQ0FBQyxDQUFBO0lBQ0osQ0FBQztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQzNCLENBQUM7SUFDRCxRQUFRO0lBRVIsQ0FBQztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFDLEdBQUcsQ0FBQztRQUN4QixJQUFJLENBQUMsWUFBWSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNoRCxDQUFDOztxSEF4QlUsd0JBQXdCO3lHQUF4Qix3QkFBd0IsMkdDZnJDLGlZQU9NLHlERElNLFlBQVksOEJBQUUsZUFBZSwrbkJBQUUsZUFBZTsyRkFJN0Msd0JBQXdCO2tCQVBwQyxTQUFTOytCQUNFLHVCQUF1QixjQUNyQixJQUFJLFdBQ1AsQ0FBQyxZQUFZLEVBQUUsZUFBZSxFQUFFLGVBQWUsQ0FBQzs2SEFRaEQsSUFBSTtzQkFBWixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlcixPbkRlc3Ryb3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBTUUxEYXRhU2VydmljZSB9IGZyb20gJy4uL2RhdGEuc2VydmljZSc7IFxuaW1wb3J0IHsgU3ViamVjdCwgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBNYXREaWFsb2csIE1hdERpYWxvZ01vZHVsZSwgTWF0RGlhbG9nUmVmIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvZGlhbG9nJztcbmltcG9ydCB7IFNxbERpYWxvZ0NvbXBvbmVudCB9IGZyb20gJy4uL3NxbC1kaWFsb2cvc3FsLWRpYWxvZy5jb21wb25lbnQnO1xuaW1wb3J0IHsgTWF0QnV0dG9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvYnV0dG9uJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbGliLXNxbC1kZWxldGUtZGlhbG9nJyxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgaW1wb3J0czogW0NvbW1vbk1vZHVsZSwgTWF0RGlhbG9nTW9kdWxlLCBNYXRCdXR0b25Nb2R1bGVdLFxuICB0ZW1wbGF0ZVVybDogJy4vc3FsLWRlbGV0ZS1kaWFsb2cuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9zcWwtZGVsZXRlLWRpYWxvZy5jb21wb25lbnQuY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgU3FsRGVsZXRlRGlhbG9nQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuXG4gIG15T2JqITogU3Vic2NyaXB0aW9uO1xuXG4gIEBJbnB1dCgpIGRhdGE6IGFueT17fTtcbiAgY2hhbmdlOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuXG5cbiAgY29uc3RydWN0b3IocHVibGljIF9kYXRhU2VydmljZTpTUUxEYXRhU2VydmljZSwgcHVibGljIGRpYWxvZzogTWF0RGlhbG9nKSB7IFxuICAgIHRoaXMubXlPYmogPSB0aGlzLl9kYXRhU2VydmljZS5kYXRhU3ViamVjdC5zdWJzY3JpYmUoZCA9PiB7XG4gICAgICB0aGlzLmRhdGE9ZDtcbiAgICB9KVxuICB9XG5cbiAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG4gICAgdGhpcy5teU9iai51bnN1YnNjcmliZSgpO1xuICB9XG4gIG5nT25Jbml0KCk6IHZvaWQge1xuXG4gIH1cblxuICBoYW5kbGVDbGljaygpIHtcbiAgICB0aGlzLmRhdGFbJ3N1Ym1pdCddPSdEJztcbiAgICB0aGlzLl9kYXRhU2VydmljZS5wdXNoTm90aWZpY2F0aW9uKHRoaXMuZGF0YSk7XG4gIH1cbn1cbiIsIjxoMSBtYXQtZGlhbG9nLXRpdGxlPkRlbGV0ZSBSZWNvcmQ8L2gxPlxuPGRpdiBtYXQtZGlhbG9nLWNvbnRlbnQ+XG4gIEFyZSB5b3Ugc3VyZSB0byB3YW50IHRvIGRlbGV0ZSB0aGlzIHJlY29yZD8gIFRoaXMgY2Fubm90IGJlIHJldmVyc2VkLlxuPC9kaXY+XG48ZGl2IG1hdC1kaWFsb2ctYWN0aW9ucz5cbiAgPGJ1dHRvbiBjbGFzcz1cImJ0biBidG4tcHJpbWFyeVwiIG1hdC1kaWFsb2ctY2xvc2U+Tm88L2J1dHRvbj5cbiAgPGJ1dHRvbiBzdHlsZT1cIm1hcmdpbi1sZWZ0OiAyMHB4O1wiIChjbGljayk9XCJoYW5kbGVDbGljaygpXCIgY2xhc3M9XCJidG4gYnRuLWRhbmdlclwiIG1hdC1kaWFsb2ctY2xvc2UgY2RrRm9jdXNJbml0aWFsPlllczwvYnV0dG9uPlxuPC9kaXY+Il19