import { Component, Input, Output, EventEmitter } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import * as i0 from "@angular/core";
import * as i1 from "../data.service";
import * as i2 from "@angular/common";
export class SqlDataMenuComponent {
    constructor(_dataService) {
        this._dataService = _dataService;
        this.row_placeholder = 'row';
        this.col_placeholder = 'col-12';
        //-- Inputs
        this.function = ''; // Use Function if data comes from a function in router.php
        this.sql = ''; // SQL that gets data 
        this.use_parameters = 'N'; // If Y uses the paramSubject to get parameters.
        this.page = ''; // page parameter, ignored if use_parameters = 'Y'.
        this.id = '0'; // id parameter, ignored if use_parameters = 'Y'.
        this.id2 = '0'; // id2 parameter, ignored if use_parameters = 'Y'.
        this.id3 = '0'; // id3 parameter, ignored if use_parameters = 'Y'.
        this.class = ''; // class of the outer container.
        this.style = ''; // style of the outer container.
        this.title = ''; // title of the page.
        this.parameters = { page: '', id: '', id2: '', id3: '' };
        this.click = new EventEmitter();
        this.counter = 0;
    }
    ngOnInit() {
    }
    processClick(m) {
        this.list.forEach(function (value) {
            if (value.id == m.id) {
                value.active = 'Y';
            }
            else {
                value.active = 'N';
            }
        });
        this.click.emit(m);
    }
    ngAfterViewInit() {
        if (this.use_parameters == 'Y') {
            this._dataService.paramSubject.subscribe(d => {
                this.parameters = d;
                this._dataService.getSQL(this.sql, this.parameters).subscribe((data) => {
                    this.list = data;
                    this.list.forEach(function (value) {
                        value.active = 'N';
                    });
                });
            });
        }
        else {
            this.parameters.page = this.page;
            this.parameters.id = this.id;
            this.parameters.id2 = this.id2;
            this.parameters.id3 = this.id3;
            this._dataService.getMenu(this.sql, this.parameters).subscribe((data) => {
                this.list = data;
                this.list.forEach(function (value) {
                    value.active = 'N';
                });
            });
        }
    }
}
SqlDataMenuComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.3", ngImport: i0, type: SqlDataMenuComponent, deps: [{ token: i1.SQLDataService }], target: i0.ɵɵFactoryTarget.Component });
SqlDataMenuComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.3", type: SqlDataMenuComponent, isStandalone: true, selector: "sql-data-menu", inputs: { function: "function", sql: "sql", use_parameters: "use_parameters", page: "page", id: "id", id2: "id2", id3: "id3", class: "class", style: "style", title: "title" }, outputs: { click: "click" }, ngImport: i0, template: "<div class=\"list-group\" [style]=\"style\">\n    <button *ngIf=\"title!=''\" class=\"list-group-item list-group-item-action list-group-item-dark\">{{ title }}</button>\n    <ng-container *ngFor=\"let m of list\">\n        <li (click)=\"processClick(m)\" *ngIf=\"m?.active!=='Y'\" \n        class=\"list-group-item d-flex justify-content-between align-items-center\">{{ m.title }}\n                <span *ngIf=\"m.badge!==''\" class=\"badge bg-primary rounded-pill\">{{ m.badge }}</span></li>\n        <li (click)=\"processClick(m)\" *ngIf=\"m?.active==='Y'\" \n        class=\"list-group-item d-flex justify-content-between align-items-center active\">{{ m.title }}\n                <span *ngIf=\"m.badge!==''\" class=\"badge bg-primary rounded-pill\">{{ m.badge }}</span></li>\n    </ng-container>\n</div>", styles: [""], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "ngmodule", type: FormsModule }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.3", ngImport: i0, type: SqlDataMenuComponent, decorators: [{
            type: Component,
            args: [{ selector: 'sql-data-menu', standalone: true, imports: [CommonModule,
                        FormsModule], template: "<div class=\"list-group\" [style]=\"style\">\n    <button *ngIf=\"title!=''\" class=\"list-group-item list-group-item-action list-group-item-dark\">{{ title }}</button>\n    <ng-container *ngFor=\"let m of list\">\n        <li (click)=\"processClick(m)\" *ngIf=\"m?.active!=='Y'\" \n        class=\"list-group-item d-flex justify-content-between align-items-center\">{{ m.title }}\n                <span *ngIf=\"m.badge!==''\" class=\"badge bg-primary rounded-pill\">{{ m.badge }}</span></li>\n        <li (click)=\"processClick(m)\" *ngIf=\"m?.active==='Y'\" \n        class=\"list-group-item d-flex justify-content-between align-items-center active\">{{ m.title }}\n                <span *ngIf=\"m.badge!==''\" class=\"badge bg-primary rounded-pill\">{{ m.badge }}</span></li>\n    </ng-container>\n</div>" }]
        }], ctorParameters: function () { return [{ type: i1.SQLDataService }]; }, propDecorators: { function: [{
                type: Input
            }], sql: [{
                type: Input
            }], use_parameters: [{
                type: Input
            }], page: [{
                type: Input
            }], id: [{
                type: Input
            }], id2: [{
                type: Input
            }], id3: [{
                type: Input
            }], class: [{
                type: Input
            }], style: [{
                type: Input
            }], title: [{
                type: Input
            }], click: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,