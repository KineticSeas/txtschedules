import { Component, Input, Output, EventEmitter } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { MatFormFieldModule } from '@angular/material/form-field';
import { MatInputModule } from '@angular/material/input';
import { Editor, toHTML } from 'ngx-editor';
import { NgxEditorModule } from 'ngx-editor';
import * as i0 from "@angular/core";
import * as i1 from "../data.service";
import * as i2 from "@angular/common";
import * as i3 from "@angular/forms";
import * as i4 from "ngx-editor";
export class SqlEditorComponent {
    ngAfterViewInit() {
    }
    constructor(_dataService) {
        this._dataService = _dataService;
        this.html = '';
        this.toolbar = [
            ['bold', 'italic'],
            ['underline', 'strike'],
            ['code', 'blockquote'],
            ['ordered_list', 'bullet_list'],
            [{ heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] }],
            ['link', 'image'],
            ['text_color', 'background_color'],
            ['align_left', 'align_center', 'align_right', 'align_justify'],
        ];
        this.value = '';
        this.fieldData = '';
        this.preview = 'Y';
        this.edit = 'Y';
        this.col = '';
        this.class = '';
        this.style = '';
        this.hint = '';
        this.icon = '';
        this.label = 'Label not set';
        this.placeholder = '';
        this.appearance = 'outline';
        this.bs_row = 'Y';
        this.bs_col = 'col-12';
        this.top_label = 'N';
        this.counter = 0;
        this.showing_preview = 'N';
        this.change = new EventEmitter();
        this.myObs = this._dataService.dataSubject.subscribe(d => {
            this.data = d;
            this.fieldData = this.data;
            if (this.fieldData[this.col] === undefined) {
                this.value = JSON.parse('{ "type": "doc", "content": [] }');
                this.editordoc = "";
            }
            else {
                if (this.fieldData[this.col] !== '') {
                    this.value = JSON.parse(this.fieldData[this.col]);
                    this.editordoc = toHTML(this.value);
                }
                else {
                    this.value = JSON.parse('{ "type": "doc", "content": [] }');
                    this.editordoc = "";
                }
            }
            this.counter++;
        });
    }
    showPreview() {
        this.edit = 'N';
    }
    showEdit() {
        this.edit = 'Y';
    }
    ngOnInit() {
        this.editor = new Editor();
    }
    handleChange() {
        this.fieldData['submit'] = 'N';
        this.fieldData[this.col] = JSON.stringify(this.value);
        this.editordoc = toHTML(this.value);
        this._dataService.pushNotification(this.fieldData);
    }
    ngOnDestroy() {
        this.myObs.unsubscribe();
    }
}
SqlEditorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.3", ngImport: i0, type: SqlEditorComponent, deps: [{ token: i1.SQLDataService }], target: i0.ɵɵFactoryTarget.Component });
SqlEditorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.3", type: SqlEditorComponent, isStandalone: true, selector: "sql-editor", inputs: { preview: "preview", edit: "edit", col: "col", data: "data", class: "class", style: "style", hint: "hint", icon: "icon", label: "label", placeholder: "placeholder", appearance: "appearance", bs_row: "bs_row", bs_col: "bs_col", top_label: "top_label" }, outputs: { change: "change" }, ngImport: i0, template: "<div *ngIf=\"preview=='Y'\">\n  <div class=\"card\">\n    <div class=\"card-body\">\n       {{ label }} <button (click)=\"showPreview()\" class=\"btn dark\" style=\"margin-left: 10px; margin-right: 10px;\"><i class=\"bi bi-binoculars\"></i></button>\n       <button (click)=\"showEdit()\" class=\"btn dark\"><i class=\"bi bi-pencil-square\"></i></button>\n  <div *ngIf=\"edit=='N'\" class=\"card\">\n        <div class=\"card-body\" [innerHTML]=\"editordoc\">\n        </div>\n  </div>\n  <div *ngIf=\"edit=='Y'\">\n      <span>\n        <ng-container *ngTemplateOutlet=\"contentTmpl\"></ng-container>\n      </span>\n    </div>\n</div>\n</div>\n</div>\n<div *ngIf=\"preview=='N'\">\n  <span>{{ label }}</span>\n  <ng-container *ngTemplateOutlet=\"contentTmpl\"></ng-container>\n</div>\n\n<ng-template #contentTmpl>\n    <span>\n          <div class=\"editor\" [style]=\"style\">\n            <ngx-editor-menu [editor]=\"editor\" [toolbar]=\"toolbar\"></ngx-editor-menu>\n            <ngx-editor [editor]=\"editor\" (ngModelChange)=\"handleChange();\" [(ngModel)]=\"value\"></ngx-editor>\n          </div>\n  </span>\n</ng-template>\n", styles: [".container{width:100%;max-width:900px;min-width:320px;margin:auto;display:flex;flex-direction:column;align-items:center;justify-content:center}.container .title,.container .content{width:100%}.container .content .display{display:flex;flex-direction:column;align-items:center;margin-bottom:1rem}.container .content .display .logo{display:flex;flex-direction:column;align-items:center;text-align:center;margin-bottom:.5rem}.container .content .display .badges img:not(:last-child){margin-right:5px}.editor{border:2px solid rgba(0,0,0,.2);border-radius:4px}.editor .NgxEditor__MenuBar{border-top-left-radius:4px;border-top-right-radius:4px;border-bottom:1px solid rgba(0,0,0,.2)}.editor .NgxEditor{border-top-left-radius:0;border-top-right-radius:0;border:none}.editor .CodeMirror{border:1px solid #eee;height:auto;margin-bottom:.7rem}.editor .CodeMirror pre{white-space:pre!important}\n"], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "ngmodule", type: FormsModule }, { kind: "directive", type: i3.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i3.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "ngmodule", type: MatFormFieldModule }, { kind: "ngmodule", type: MatInputModule }, { kind: "ngmodule", type: NgxEditorModule }, { kind: "component", type: i4.NgxEditorComponent, selector: "ngx-editor", inputs: ["editor", "outputFormat", "placeholder"], outputs: ["focusOut", "focusIn"] }, { kind: "component", type: i4.MenuComponent, selector: "ngx-editor-menu", inputs: ["toolbar", "colorPresets", "disabled", "editor", "customMenuRef", "dropdownPlacement"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.3", ngImport: i0, type: SqlEditorComponent, decorators: [{
            type: Component,
            args: [{ selector: 'sql-editor', standalone: true, imports: [CommonModule, FormsModule, MatFormFieldModule, MatInputModule, NgxEditorModule], template: "<div *ngIf=\"preview=='Y'\">\n  <div class=\"card\">\n    <div class=\"card-body\">\n       {{ label }} <button (click)=\"showPreview()\" class=\"btn dark\" style=\"margin-left: 10px; margin-right: 10px;\"><i class=\"bi bi-binoculars\"></i></button>\n       <button (click)=\"showEdit()\" class=\"btn dark\"><i class=\"bi bi-pencil-square\"></i></button>\n  <div *ngIf=\"edit=='N'\" class=\"card\">\n        <div class=\"card-body\" [innerHTML]=\"editordoc\">\n        </div>\n  </div>\n  <div *ngIf=\"edit=='Y'\">\n      <span>\n        <ng-container *ngTemplateOutlet=\"contentTmpl\"></ng-container>\n      </span>\n    </div>\n</div>\n</div>\n</div>\n<div *ngIf=\"preview=='N'\">\n  <span>{{ label }}</span>\n  <ng-container *ngTemplateOutlet=\"contentTmpl\"></ng-container>\n</div>\n\n<ng-template #contentTmpl>\n    <span>\n          <div class=\"editor\" [style]=\"style\">\n            <ngx-editor-menu [editor]=\"editor\" [toolbar]=\"toolbar\"></ngx-editor-menu>\n            <ngx-editor [editor]=\"editor\" (ngModelChange)=\"handleChange();\" [(ngModel)]=\"value\"></ngx-editor>\n          </div>\n  </span>\n</ng-template>\n", styles: [".container{width:100%;max-width:900px;min-width:320px;margin:auto;display:flex;flex-direction:column;align-items:center;justify-content:center}.container .title,.container .content{width:100%}.container .content .display{display:flex;flex-direction:column;align-items:center;margin-bottom:1rem}.container .content .display .logo{display:flex;flex-direction:column;align-items:center;text-align:center;margin-bottom:.5rem}.container .content .display .badges img:not(:last-child){margin-right:5px}.editor{border:2px solid rgba(0,0,0,.2);border-radius:4px}.editor .NgxEditor__MenuBar{border-top-left-radius:4px;border-top-right-radius:4px;border-bottom:1px solid rgba(0,0,0,.2)}.editor .NgxEditor{border-top-left-radius:0;border-top-right-radius:0;border:none}.editor .CodeMirror{border:1px solid #eee;height:auto;margin-bottom:.7rem}.editor .CodeMirror pre{white-space:pre!important}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.SQLDataService }]; }, propDecorators: { preview: [{
                type: Input
            }], edit: [{
                type: Input
            }], col: [{
                type: Input
            }], data: [{
                type: Input
            }], class: [{
                type: Input
            }], style: [{
                type: Input
            }], hint: [{
                type: Input
            }], icon: [{
                type: Input
            }], label: [{
                type: Input
            }], placeholder: [{
                type: Input
            }], appearance: [{
                type: Input
            }], bs_row: [{
                type: Input
            }], bs_col: [{
                type: Input
            }], top_label: [{
                type: Input
            }], change: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,