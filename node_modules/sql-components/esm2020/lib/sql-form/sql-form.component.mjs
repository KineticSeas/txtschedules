import { Component, Input, Output, EventEmitter } from '@angular/core';
import { CommonModule } from '@angular/common';
import { MatCommonModule } from '@angular/material/core';
import * as i0 from "@angular/core";
import * as i1 from "../data.service";
import * as i2 from "@angular/common";
export class SqlFormComponent {
    constructor(_dataService) {
        // part of an edit table or container.
        this._dataService = _dataService;
        this.last_id = '';
        this.containerParameters = { id: '', id2: '', id3: '' };
        this.id = '0';
        this.id2 = '0';
        this.id3 = '0';
        this.id2_col = '';
        this.id3_col = '';
        this.default_col = '';
        this.default_col2 = '';
        this.default_col3 = '';
        this.default_value = '';
        this.default_value2 = '';
        this.default_value3 = '';
        this.table = "dual";
        this.embedded = "Y";
        this.card = "Y";
        this.closable = "N";
        this.open = "Y";
        this.class = "";
        this.style = "";
        this.title = "";
        this.bs_row = 'N';
        this.bs_col = '';
        this.handler = 'default';
        this.reload = 'N';
        this.parameters = { page: '', id: '', id2: '', id3: '' };
        this.change = new EventEmitter();
        this.saved = new EventEmitter();
        this.counter = 0;
        this.showErrorAlert = 'N';
        this.errorMessage = 'Post Failed';
        this.showSuccessAlert = 'N';
        if (this.embedded == 'Y') {
            console.log('form constructor');
            this.myContainerObs = this._dataService.containerSubject.subscribe(d => {
                console.log('container parameters');
                console.log(d);
                this.containerParameters = d;
                if (this.containerParameters.id != this.last_id) {
                    this.last_id = this.containerParameters.id;
                    this.id = this.containerParameters.id;
                    if (this.containerParameters.id2 !== undefined) {
                        this.id2 = this.containerParameters.id2;
                    }
                    if (this.containerParameters.id3 !== undefined) {
                        this.id3 = this.containerParameters.id3;
                    }
                    if (this.containerParameters.default_col !== undefined) {
                        this.default_col = this.containerParameters.default_col;
                    }
                    if (this.containerParameters.default_col2 !== undefined) {
                        this.default_col = this.containerParameters.default_col2;
                    }
                    if (this.containerParameters.default_col3 !== undefined) {
                        this.default_col = this.containerParameters.default_col3;
                    }
                    this.getFormData();
                }
            });
        }
        else {
        }
        this.myDataObs = this._dataService.dataSubject.subscribe(d => {
            console.log('data subject');
            this.data = d;
            if (this.data.id != this.last_id) {
                this.last_id = this.data.id;
                this.id = this.data.id;
            }
            if (this.data.submit === 'Y') {
                this.postSQL();
            }
            if (this.data.submit === 'D') {
                this.postDelete();
            }
        });
    }
    ngOnInit() {
    }
    getFormData() {
        this.parameters.id = this.id;
        this.parameters.id2 = this.id2;
        this.parameters.id3 = this.id3;
        this.parameters.default_col = this.default_col;
        this.parameters.default_col2 = this.default_col2;
        this.parameters.default_col3 = this.default_col3;
        if (this.table != 'dual') {
            this._dataService.getForm(this.table, this.parameters).subscribe((data) => {
                this.data = data;
                //          if (this.default_col!='') { this.data[this.default_col]=this.default_value }
                //          if (this.default_col2!='') { this.data[this.default_col2]=this.default_value2 }        
                //          if (this.default_col3!='') { this.data[this.default_col3]=this.default_value3 }
                this._dataService.pushNotification(this.data);
            });
        }
    }
    ngAfterViewInit() {
        console.log('AVI geting form');
        if (this.embedded !== 'Y') {
            this.getFormData();
        }
    }
    postSQL() {
        this._dataService.postSQL(this.data).subscribe((data) => {
            if (data.error_code == "0") {
                this.showSuccessAlert = 'Y';
                this.showErrorAlert = 'N';
                this.errorMessage = 'Record Saved';
            }
            else {
                this.showSuccessAlert = 'N';
                this.showErrorAlert = 'Y';
                this.errorMessage = data.error_message;
                this.errorMessage = 'Record Saved';
            }
            if (this.reload == 'N') {
                setTimeout(() => {
                    this.showErrorAlert = 'N';
                    this.showSuccessAlert = 'N';
                    this.data.refresh = 'Y';
                    this.data.submit = 'N';
                    this._dataService.pushNotification(data);
                }, 1000);
            }
            else {
                setTimeout(() => {
                    this.showErrorAlert = 'N';
                    this.showSuccessAlert = 'N';
                    this.data.refresh = 'Y';
                    this.data.submit = 'N';
                    this._dataService.pushNotification(data);
                    location.reload();
                }, 500);
            }
        });
    }
    postDelete() {
        this._dataService.postDelete(this.data).subscribe((data) => {
            if (data.error_code == "0") {
                this.showSuccessAlert = 'Y';
                this.showErrorAlert = 'N';
                this.errorMessage = 'Record Saved';
            }
            else {
                this.showSuccessAlert = 'N';
                this.showErrorAlert = 'Y';
                this.errorMessage = data.error_message;
                this.errorMessage = 'Record Saved';
            }
            setTimeout(() => {
                this.showErrorAlert = 'N';
                this.showSuccessAlert = 'N';
                this.data.refresh = 'Y';
                this.data.submit = 'N';
                this._dataService.pushNotification(data);
            }, 1000);
        });
    }
    ngDoCheck() {
    }
    ngOnChanges(changes) {
    }
    ngOnDestroy() {
        //    this.myContainerObs.unsubscribe();
        //    this.myDataObs.unsubscribe();
    }
}
SqlFormComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.3", ngImport: i0, type: SqlFormComponent, deps: [{ token: i1.SQLDataService }], target: i0.ɵɵFactoryTarget.Component });
SqlFormComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.3", type: SqlFormComponent, isStandalone: true, selector: "sql-form", inputs: { data: "data", id: "id", id2: "id2", id3: "id3", id2_col: "id2_col", id3_col: "id3_col", default_col: "default_col", default_col2: "default_col2", default_col3: "default_col3", default_value: "default_value", default_value2: "default_value2", default_value3: "default_value3", table: "table", embedded: "embedded", card: "card", closable: "closable", open: "open", class: "class", style: "style", title: "title", bs_row: "bs_row", bs_col: "bs_col", handler: "handler", reload: "reload" }, outputs: { change: "change", saved: "saved" }, usesOnChanges: true, ngImport: i0, template: "<div *ngIf=\"card=='N'\">\n    <div *ngIf=\"bs_row=='Y'\" class=\"row\">\n        <div [class]=\"bs_col\">\n            <ng-container *ngTemplateOutlet=\"contentTmpl\"></ng-container>\n        </div>\n    </div>\n    <div *ngIf=\"bs_row!='Y'&&bs_col!=''\">\n        <div [class]=\"bs_col\">\n            <ng-container *ngTemplateOutlet=\"contentTmpl\"></ng-container>\n        </div>\n    </div>\n    <div *ngIf=\"bs_row!='Y'&&bs_col==''\">\n            <ng-container *ngTemplateOutlet=\"contentTmpl\"></ng-container>\n    </div>\n</div>\n\n<div *ngIf=\"card=='Y'\">\n    <div *ngIf=\"bs_row=='Y'\" class=\"row\">\n        <div [class]=\"bs_col\">\n            <div class=\"card\">\n                <div class=\"card-header\" style=\"margin-top: 0px;\">\n                    <h2>{{ title }}</h2>\n                </div>\n                <div class=\"card-body\">\n                    <ng-container *ngTemplateOutlet=\"contentTmpl\"></ng-container>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div *ngIf=\"bs_row!='Y'&&bs_col!=''\">\n        <div [class]=\"bs_col\">\n            <div class=\"card\">\n                <div class=\"card-header p-2\">\n                    <h2>{{ title }}</h2>\n                </div>\n                <div class=\"card-body\">\n                    <ng-container *ngTemplateOutlet=\"contentTmpl\"></ng-container>\n                </div>\n            </div>\n        </div>\n    </div>    \n    <div *ngIf=\"bs_row!='Y'&&bs_col==''\">\n            <div class=\"card\">\n                <div class=\"card-header\">\n                    <h2 p-2>{{ title }}</h2>\n                </div>\n                <div class=\"card-body\">\n                    <ng-container *ngTemplateOutlet=\"contentTmpl\"></ng-container>\n                </div>\n            </div>\n    </div>    \n</div>\n\n<ng-template #contentTmpl>\n    <div *ngIf=\"showSuccessAlert=='Y'\" class=\"alert alert-success\" role=\"alert\">\n        {{ this.errorMessage }}\n      </div>\n      <div *ngIf=\"showErrorAlert=='Y'\" class=\"alert alert-danger\" role=\"alert\">\n        {{ this.errorMessage }}\n      </div>\n    <ng-content></ng-content>\n    <div *ngIf=\"showSuccessAlert=='Y'\" class=\"alert alert-success\" role=\"alert\">\n        {{ this.errorMessage }}\n      </div>\n      <div *ngIf=\"showErrorAlert=='Y'\" class=\"alert alert-danger\" role=\"alert\">\n        {{ this.errorMessage }}\n      </div>\n</ng-template>", styles: [""], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "ngmodule", type: MatCommonModule }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.3", ngImport: i0, type: SqlFormComponent, decorators: [{
            type: Component,
            args: [{ selector: 'sql-form', standalone: true, imports: [CommonModule, MatCommonModule], template: "<div *ngIf=\"card=='N'\">\n    <div *ngIf=\"bs_row=='Y'\" class=\"row\">\n        <div [class]=\"bs_col\">\n            <ng-container *ngTemplateOutlet=\"contentTmpl\"></ng-container>\n        </div>\n    </div>\n    <div *ngIf=\"bs_row!='Y'&&bs_col!=''\">\n        <div [class]=\"bs_col\">\n            <ng-container *ngTemplateOutlet=\"contentTmpl\"></ng-container>\n        </div>\n    </div>\n    <div *ngIf=\"bs_row!='Y'&&bs_col==''\">\n            <ng-container *ngTemplateOutlet=\"contentTmpl\"></ng-container>\n    </div>\n</div>\n\n<div *ngIf=\"card=='Y'\">\n    <div *ngIf=\"bs_row=='Y'\" class=\"row\">\n        <div [class]=\"bs_col\">\n            <div class=\"card\">\n                <div class=\"card-header\" style=\"margin-top: 0px;\">\n                    <h2>{{ title }}</h2>\n                </div>\n                <div class=\"card-body\">\n                    <ng-container *ngTemplateOutlet=\"contentTmpl\"></ng-container>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div *ngIf=\"bs_row!='Y'&&bs_col!=''\">\n        <div [class]=\"bs_col\">\n            <div class=\"card\">\n                <div class=\"card-header p-2\">\n                    <h2>{{ title }}</h2>\n                </div>\n                <div class=\"card-body\">\n                    <ng-container *ngTemplateOutlet=\"contentTmpl\"></ng-container>\n                </div>\n            </div>\n        </div>\n    </div>    \n    <div *ngIf=\"bs_row!='Y'&&bs_col==''\">\n            <div class=\"card\">\n                <div class=\"card-header\">\n                    <h2 p-2>{{ title }}</h2>\n                </div>\n                <div class=\"card-body\">\n                    <ng-container *ngTemplateOutlet=\"contentTmpl\"></ng-container>\n                </div>\n            </div>\n    </div>    \n</div>\n\n<ng-template #contentTmpl>\n    <div *ngIf=\"showSuccessAlert=='Y'\" class=\"alert alert-success\" role=\"alert\">\n        {{ this.errorMessage }}\n      </div>\n      <div *ngIf=\"showErrorAlert=='Y'\" class=\"alert alert-danger\" role=\"alert\">\n        {{ this.errorMessage }}\n      </div>\n    <ng-content></ng-content>\n    <div *ngIf=\"showSuccessAlert=='Y'\" class=\"alert alert-success\" role=\"alert\">\n        {{ this.errorMessage }}\n      </div>\n      <div *ngIf=\"showErrorAlert=='Y'\" class=\"alert alert-danger\" role=\"alert\">\n        {{ this.errorMessage }}\n      </div>\n</ng-template>" }]
        }], ctorParameters: function () { return [{ type: i1.SQLDataService }]; }, propDecorators: { data: [{
                type: Input
            }], id: [{
                type: Input
            }], id2: [{
                type: Input
            }], id3: [{
                type: Input
            }], id2_col: [{
                type: Input
            }], id3_col: [{
                type: Input
            }], default_col: [{
                type: Input
            }], default_col2: [{
                type: Input
            }], default_col3: [{
                type: Input
            }], default_value: [{
                type: Input
            }], default_value2: [{
                type: Input
            }], default_value3: [{
                type: Input
            }], table: [{
                type: Input
            }], embedded: [{
                type: Input
            }], card: [{
                type: Input
            }], closable: [{
                type: Input
            }], open: [{
                type: Input
            }], class: [{
                type: Input
            }], style: [{
                type: Input
            }], title: [{
                type: Input
            }], bs_row: [{
                type: Input
            }], bs_col: [{
                type: Input
            }], handler: [{
                type: Input
            }], reload: [{
                type: Input
            }], change: [{
                type: Output
            }], saved: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,