import { Component, Input, Output, EventEmitter } from '@angular/core';
import { CommonModule } from '@angular/common';
import * as i0 from "@angular/core";
import * as i1 from "../data.service";
import * as i2 from "@angular/common";
export class SqlSubmitComponent {
    constructor(_dataService) {
        this._dataService = _dataService;
        this.data = {};
        this.label = 'Save Changes';
        this.class = 'btn btn-primary';
        this.style = '';
        this.change = new EventEmitter();
        this.counter = 0;
        this.myObj = this._dataService.dataSubject.subscribe(d => {
            this.data = d;
            this.counter++;
        });
    }
    ngOnDestroy() {
        this.myObj.unsubscribe();
    }
    ngOnInit() {
    }
    handleClick() {
        this.data['submit'] = 'Y';
        this._dataService.pushNotification(this.data);
    }
}
SqlSubmitComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.3", ngImport: i0, type: SqlSubmitComponent, deps: [{ token: i1.SQLDataService }], target: i0.ɵɵFactoryTarget.Component });
SqlSubmitComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.3", type: SqlSubmitComponent, isStandalone: true, selector: "sql-submit", inputs: { data: "data", label: "label", class: "class", style: "style" }, outputs: { change: "change" }, ngImport: i0, template: "<span class=\"m-2 p-2\">\n    <button [ngClass]=\"class\" [style]=\"style\" (click)=\"handleClick()\">{{ label }}</button> \n</span>", styles: [""], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.3", ngImport: i0, type: SqlSubmitComponent, decorators: [{
            type: Component,
            args: [{ selector: 'sql-submit', standalone: true, imports: [CommonModule], template: "<span class=\"m-2 p-2\">\n    <button [ngClass]=\"class\" [style]=\"style\" (click)=\"handleClick()\">{{ label }}</button> \n</span>" }]
        }], ctorParameters: function () { return [{ type: i1.SQLDataService }]; }, propDecorators: { data: [{
                type: Input
            }], label: [{
                type: Input
            }], class: [{
                type: Input
            }], style: [{
                type: Input
            }], change: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3FsLXN1Ym1pdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9zcWwtY29tcG9uZW50cy9zcmMvbGliL3NxbC1zdWJtaXQvc3FsLXN1Ym1pdC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9zcWwtY29tcG9uZW50cy9zcmMvbGliL3NxbC1zdWJtaXQvc3FsLXN1Ym1pdC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFZLE1BQU0sZUFBZSxDQUFDO0FBQ3pGLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQzs7OztBQVcvQyxNQUFNLE9BQU8sa0JBQWtCO0lBWTdCLFlBQW1CLFlBQTJCO1FBQTNCLGlCQUFZLEdBQVosWUFBWSxDQUFlO1FBUnJDLFNBQUksR0FBTSxFQUFFLENBQUM7UUFDYixVQUFLLEdBQVEsY0FBYyxDQUFDO1FBQzVCLFVBQUssR0FBUSxpQkFBaUIsQ0FBQztRQUMvQixVQUFLLEdBQVEsRUFBRSxDQUFDO1FBRXpCLFdBQU0sR0FBc0IsSUFBSSxZQUFZLEVBQU8sQ0FBQztRQUNwRCxZQUFPLEdBQVcsQ0FBQyxDQUFDO1FBR2xCLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxXQUFXLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxFQUFFO1lBQ3ZELElBQUksQ0FBQyxJQUFJLEdBQUMsQ0FBQyxDQUFDO1lBQ1osSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ2pCLENBQUMsQ0FBQyxDQUFBO0lBQ0osQ0FBQztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQzNCLENBQUM7SUFDRCxRQUFRO0lBRVIsQ0FBQztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFDLEdBQUcsQ0FBQztRQUN4QixJQUFJLENBQUMsWUFBWSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNoRCxDQUFDOzsrR0E3QlUsa0JBQWtCO21HQUFsQixrQkFBa0IsK0tDWi9CLHNJQUVPLHlERE1LLFlBQVk7MkZBSVgsa0JBQWtCO2tCQVA5QixTQUFTOytCQUNFLFlBQVksY0FDVixJQUFJLFdBQ1AsQ0FBQyxZQUFZLENBQUM7cUdBUWQsSUFBSTtzQkFBWixLQUFLO2dCQUNHLEtBQUs7c0JBQWIsS0FBSztnQkFDRyxLQUFLO3NCQUFiLEtBQUs7Z0JBQ0csS0FBSztzQkFBYixLQUFLO2dCQUVOLE1BQU07c0JBREwsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIsT25EZXN0cm95IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgU1FMRGF0YVNlcnZpY2UgfSBmcm9tICcuLi9kYXRhLnNlcnZpY2UnOyBcbmltcG9ydCB7IFN1YmplY3QsIFN1YnNjcmlwdGlvbiB9IGZyb20gJ3J4anMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdzcWwtc3VibWl0JyxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgaW1wb3J0czogW0NvbW1vbk1vZHVsZV0sXG4gIHRlbXBsYXRlVXJsOiAnLi9zcWwtc3VibWl0LmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vc3FsLXN1Ym1pdC5jb21wb25lbnQuY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgU3FsU3VibWl0Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuXG4gIG15T2JqITogU3Vic2NyaXB0aW9uO1xuXG4gIEBJbnB1dCgpIGRhdGE6IGFueT17fTtcbiAgQElucHV0KCkgbGFiZWw6IGFueSA9ICdTYXZlIENoYW5nZXMnO1xuICBASW5wdXQoKSBjbGFzczogYW55ID0gJ2J0biBidG4tcHJpbWFyeSc7XG4gIEBJbnB1dCgpIHN0eWxlOiBhbnkgPSAnJztcbiAgQE91dHB1dCgpXG4gIGNoYW5nZTogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcbiAgY291bnRlcjogbnVtYmVyID0gMDtcblxuICBjb25zdHJ1Y3RvcihwdWJsaWMgX2RhdGFTZXJ2aWNlOlNRTERhdGFTZXJ2aWNlKSB7IFxuICAgIHRoaXMubXlPYmogPSB0aGlzLl9kYXRhU2VydmljZS5kYXRhU3ViamVjdC5zdWJzY3JpYmUoZCA9PiB7XG4gICAgICB0aGlzLmRhdGE9ZDtcbiAgICAgIHRoaXMuY291bnRlcisrO1xuICAgIH0pXG4gIH1cblxuICBuZ09uRGVzdHJveSgpOiB2b2lkIHtcbiAgICB0aGlzLm15T2JqLnVuc3Vic2NyaWJlKCk7XG4gIH1cbiAgbmdPbkluaXQoKTogdm9pZCB7XG5cbiAgfVxuXG4gIGhhbmRsZUNsaWNrKCkge1xuICAgIHRoaXMuZGF0YVsnc3VibWl0J109J1knO1xuICAgIHRoaXMuX2RhdGFTZXJ2aWNlLnB1c2hOb3RpZmljYXRpb24odGhpcy5kYXRhKTtcbiAgfVxufVxuIiwiPHNwYW4gY2xhc3M9XCJtLTIgcC0yXCI+XG4gICAgPGJ1dHRvbiBbbmdDbGFzc109XCJjbGFzc1wiIFtzdHlsZV09XCJzdHlsZVwiIChjbGljayk9XCJoYW5kbGVDbGljaygpXCI+e3sgbGFiZWwgfX08L2J1dHRvbj4gXG48L3NwYW4+Il19