import { Injectable } from '@angular/core';
import { of, catchError } from 'rxjs';
import * as i0 from "@angular/core";
import * as i1 from "./data.service";
export class RouteParameterResolver {
    constructor(dataService) {
        this.dataService = dataService;
    }
    resolve(route, state) {
        this.path = '';
        if (state.url !== undefined) {
            this.path = state.url;
        }
        this.r = this.dataService.pingParameters(this.path).pipe(catchError(err => {
            console.log(err);
            return of(null);
        }));
        console.log(this.r);
        this.dataService.paramSubject.next(this.r);
        this.dataService.containerSubject.next(this.r);
        return (this.r);
    }
}
RouteParameterResolver.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.3", ngImport: i0, type: RouteParameterResolver, deps: [{ token: i1.SQLDataService }], target: i0.ɵɵFactoryTarget.Injectable });
RouteParameterResolver.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "15.2.3", ngImport: i0, type: RouteParameterResolver, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.3", ngImport: i0, type: RouteParameterResolver, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root'
                }]
        }], ctorParameters: function () { return [{ type: i1.SQLDataService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3FsLnJlc29sdmVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvc3FsLWNvbXBvbmVudHMvc3JjL2xpYi9zcWwucmVzb2x2ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQU8zQyxPQUFPLEVBQWMsRUFBRSxFQUFFLFVBQVUsRUFBRSxNQUFNLE1BQU0sQ0FBQzs7O0FBS2xELE1BQU0sT0FBTyxzQkFBc0I7SUFRakMsWUFBb0IsV0FBMkI7UUFBM0IsZ0JBQVcsR0FBWCxXQUFXLENBQWdCO0lBQUksQ0FBQztJQUVwRCxPQUFPLENBQUMsS0FBNkIsRUFBRSxLQUEwQjtRQUM3RCxJQUFJLENBQUMsSUFBSSxHQUFHLEVBQUUsQ0FBQztRQUVmLElBQUksS0FBSyxDQUFDLEdBQUcsS0FBRyxTQUFTLEVBQUU7WUFDekIsSUFBSSxDQUFDLElBQUksR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDO1NBQ3ZCO1FBRUgsSUFBSSxDQUFDLENBQUMsR0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUEsRUFBRTtZQUVuRSxPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ2pCLE9BQU8sRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ2xCLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDSixPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNwQixJQUFJLENBQUMsV0FBVyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzNDLElBQUksQ0FBQyxXQUFXLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNqRCxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFBO0lBQ2pCLENBQUM7O21IQTFCVSxzQkFBc0I7dUhBQXRCLHNCQUFzQixjQUZyQixNQUFNOzJGQUVQLHNCQUFzQjtrQkFIbEMsVUFBVTttQkFBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTUUxEYXRhU2VydmljZSB9IGZyb20gJy4vZGF0YS5zZXJ2aWNlJztcbmltcG9ydCB7XG4gIFJvdXRlciwgUmVzb2x2ZSxcbiAgUm91dGVyU3RhdGVTbmFwc2hvdCxcbiAgQWN0aXZhdGVkUm91dGVTbmFwc2hvdFxufSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSwgb2YsIGNhdGNoRXJyb3IgfSBmcm9tICdyeGpzJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCcgICAgICAgICAgICAgIFxufSlcbmV4cG9ydCBjbGFzcyBSb3V0ZVBhcmFtZXRlclJlc29sdmVyIGltcGxlbWVudHMgUmVzb2x2ZTxib29sZWFuPiB7XG5cbiAgcjogYW55O1xuICBwYXRoOiBhbnk7XG4gIGlkOiBhbnk7XG4gIGlkMjogYW55O1xuICBpZDM6IGFueTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGRhdGFTZXJ2aWNlOiBTUUxEYXRhU2VydmljZSkgeyB9XG5cbiAgcmVzb2x2ZShyb3V0ZTogQWN0aXZhdGVkUm91dGVTbmFwc2hvdCwgc3RhdGU6IFJvdXRlclN0YXRlU25hcHNob3QpOiBPYnNlcnZhYmxlPGJvb2xlYW4+IHtcbiAgICAgIHRoaXMucGF0aCA9ICcnO1xuICAgICAgXG4gICAgICBpZiAoc3RhdGUudXJsIT09dW5kZWZpbmVkKSB7XG4gICAgICAgIHRoaXMucGF0aCA9IHN0YXRlLnVybDtcbiAgICAgIH1cbiAgICAgXG4gICAgdGhpcy5yPXRoaXMuZGF0YVNlcnZpY2UucGluZ1BhcmFtZXRlcnModGhpcy5wYXRoKS5waXBlKGNhdGNoRXJyb3IoZXJyPT4gXG4gICAgICB7IFxuICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICByZXR1cm4gb2YobnVsbCk7XG4gICAgICB9KSk7XG4gICAgICBjb25zb2xlLmxvZyh0aGlzLnIpO1xuICAgICAgdGhpcy5kYXRhU2VydmljZS5wYXJhbVN1YmplY3QubmV4dCh0aGlzLnIpO1xuICAgICAgdGhpcy5kYXRhU2VydmljZS5jb250YWluZXJTdWJqZWN0Lm5leHQodGhpcy5yKTtcbiAgICByZXR1cm4gKHRoaXMucilcbiAgfVxufSJdfQ==